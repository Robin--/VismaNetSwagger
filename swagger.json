{
 "swagger": "2.0",
 "info": {
  "description": "Get details for the returned error code https://confluence.visma.com/display/IS/IPP+Error+codes",
  "version": "1.5",
  "title": "Visma.net API"
 },
 "basePath": "/API",
 "tags": [
  {
   "name": "Security endpoint."
  }
 ],
 "schemes": [
  "https"
 ],
 "paths": {
  "/controller/api/v1/GeneralLedgerTransactions": {
   "get": {
    "tags": [
     "GeneralLedgerTransactions"
    ],
    "summary": "Get a range of General Ledger Transactions",
    "operationId": "GeneralLedgerTransactions_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "branch",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "ledger",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "fromPeriod",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "toPeriod",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "account",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "subaccountId",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "fromDate",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "toDate",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "includeUnposted",
      "in": "query",
      "required": false,
      "type": "boolean"
     },
     {
      "name": "includeUnreleased",
      "in": "query",
      "required": false,
      "type": "boolean"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/GeneralLedgerTransactionDetailsDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/PurchaseReceipt": {
   "get": {
    "tags": [
     "PurchaseReceipt"
    ],
    "operationId": "PurchaseReceipt_GetAllReceiptBasic",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/PurchaseReceiptDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/PurchaseReceipt/{receiptNbr}": {
   "get": {
    "tags": [
     "PurchaseReceipt"
    ],
    "summary": "Get a specific Purchase Receipt",
    "operationId": "PurchaseReceipt_GetPurchaseReceiptBasic",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "receiptNbr",
      "in": "path",
      "description": "Identifies the Purchase Receipt",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/PurchaseReceiptDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/PurchaseReceiptBasic": {
   "get": {
    "tags": [
     "PurchaseReceiptBasic"
    ],
    "operationId": "PurchaseReceiptBasic_GetAllReceiptBasic",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/PurchaseReceiptDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/PurchaseReceiptBasic/{receiptNbr}": {
   "get": {
    "tags": [
     "PurchaseReceiptBasic"
    ],
    "summary": "Get a specific Purchase Receipt",
    "operationId": "PurchaseReceiptBasic_GetPurchaseReceiptBasic",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "receiptNbr",
      "in": "path",
      "description": "Identifies the Purchase Receipt",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/PurchaseReceiptDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/account": {
   "get": {
    "tags": [
     "Account"
    ],
    "summary": "Gets a range of Accounts",
    "operationId": "Account_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/AccountDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/account/{accountCd}": {
   "get": {
    "tags": [
     "Account"
    ],
    "summary": "Get specific Account",
    "operationId": "Account_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "accountCd",
      "in": "path",
      "description": "Identifies the account",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/AccountDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/attachment/{attachmentId}": {
   "get": {
    "tags": [
     "Attachment"
    ],
    "summary": "Get latest revision of a specific Attachment",
    "operationId": "Attachment_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "attachmentId",
      "in": "path",
      "description": "Identifies the attachment",
      "required": true,
      "type": "string",
      "format": "uuid"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "Attachment"
    ],
    "summary": "Update a specific Attachment",
    "operationId": "Attachment_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "attachmentId",
      "in": "path",
      "description": "Identifies the Attachment to update",
      "required": true,
      "type": "string",
      "format": "uuid"
     },
     {
      "in": "body",
      "name": "metadataDto",
      "description": "Defines the data for the Attachment to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/AttachmentMetadataUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/branch": {
   "get": {
    "tags": [
     "Branch"
    ],
    "summary": "Get a range of Branches",
    "operationId": "Branch_GetAllBranches",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/BranchDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/branch/{branchNumber}": {
   "get": {
    "tags": [
     "Branch"
    ],
    "summary": "Get a specific branch",
    "operationId": "Branch_GetSpecificBranch",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "branchNumber",
      "in": "path",
      "description": "Identifies the branch",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/BranchDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/carrier": {
   "get": {
    "tags": [
     "Carrier"
    ],
    "summary": "Get a range of Carriers",
    "operationId": "Carrier_GetAllCarriers",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CarrierDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/carrier/{carrierName}": {
   "get": {
    "tags": [
     "Carrier"
    ],
    "summary": "Get a specific Carrier",
    "operationId": "Carrier_GetCarrier",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "carrierName",
      "in": "path",
      "description": "Identifies the Carrier",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CarrierDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/cashsale": {
   "get": {
    "tags": [
     "CashSale"
    ],
    "summary": "Get a range of Cash Sales",
    "operationId": "CashSale_GetAllCashSales",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CashSaleDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "CashSale"
    ],
    "summary": "Create a Cash Sale",
    "operationId": "CashSale_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "cashSaleUpdateDto",
      "description": "Defines the data for the Cash Sale to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CashSaleUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/cashsale/{documentNumber}": {
   "get": {
    "tags": [
     "CashSale"
    ],
    "summary": "Get a specific Cash Sale",
    "operationId": "CashSale_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "documentNumber",
      "in": "path",
      "description": "Identifies the Cash Sale Document",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CashSaleDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/cashsale/{documentnumber}": {
   "put": {
    "tags": [
     "CashSale"
    ],
    "summary": "Update a specific Cash Sale",
    "operationId": "CashSale_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "documentnumber",
      "in": "path",
      "description": "Identifies the Cash Sale to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "cashSaleUpdateDto",
      "description": "Defines the data for the Cash Sale to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CashSaleUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/contact": {
   "get": {
    "tags": [
     "Contact"
    ],
    "summary": "Get a range of Contacts",
    "operationId": "Contact_GetAllContacts",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/ContactDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "Contact"
    ],
    "summary": "Create a Contact",
    "operationId": "Contact_CreateContact",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "contact",
      "description": "Defines the data for the Contact to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ContactUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/contact/{contactId}": {
   "get": {
    "tags": [
     "Contact"
    ],
    "summary": "Get a specific Contact",
    "operationId": "Contact_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "contactId",
      "in": "path",
      "description": "Identifies the Contact",
      "required": true,
      "type": "integer",
      "format": "int32"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ContactDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "Contact"
    ],
    "summary": "Update a specific Contact",
    "operationId": "Contact_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "contactId",
      "in": "path",
      "description": "Identifies the Contact to update",
      "required": true,
      "type": "integer",
      "format": "int32"
     },
     {
      "in": "body",
      "name": "contact",
      "description": "Defines the data for the Contact to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ContactUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/creditNote": {
   "get": {
    "tags": [
     "CreditNote"
    ],
    "summary": "Get a range of Credit Notes",
    "operationId": "CreditNote_GetAllCreditNotesDto",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CreditNoteDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "CreditNote"
    ],
    "summary": "Create a Credit Note",
    "operationId": "CreditNote_CreateCreditNote",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "creditNoteUpdateDto",
      "description": "Defines the data for the Credit Note to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CreditNoteUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/creditNote/{creditNoteNumber}": {
   "get": {
    "tags": [
     "CreditNote"
    ],
    "summary": "Get a specific Credit Note",
    "operationId": "CreditNote_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "creditNoteNumber",
      "in": "path",
      "description": "Identifies the Credit Note",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CreditNoteDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "CreditNote"
    ],
    "summary": "Update a specific Credit Note",
    "operationId": "CreditNote_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "creditNoteNumber",
      "in": "path",
      "description": "Identifies the Credit Note to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "creditNoteUpdateDto",
      "description": "Defines the data for the Credit Note to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CreditNoteUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/creditNote/{creditNoteNumber}/action/release": {
   "post": {
    "tags": [
     "CreditNote"
    ],
    "summary": "Release credit note operation",
    "operationId": "CreditNote_ReleaseInvoice",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "creditNoteNumber",
      "in": "path",
      "description": "Reference number of the credit note to be released",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "releaseActionDto",
      "description": "",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ReleaseInvoiceActionDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleaseInvoiceActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/creditNote/{creditNoteNumber}/attachment": {
   "post": {
    "tags": [
     "CreditNote"
    ],
    "summary": "Creates an attachment and associates it with a Credit Note. If the file already exists, a new revision is created.",
    "operationId": "CreditNote_CreateHeaderAttachment",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "creditNoteNumber",
      "in": "path",
      "description": "Identifies the Credit Note",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/creditNote/{creditNoteNumber}/{lineNumber}/attachment": {
   "post": {
    "tags": [
     "CreditNote"
    ],
    "summary": "Creates an attachment and associates it with a certain Credit Note line. If the file already exists, a new revision is created.",
    "operationId": "CreditNote_CreateLineAttachment",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "creditNoteNumber",
      "in": "path",
      "description": "Identifies the Credit Note",
      "required": true,
      "type": "string"
     },
     {
      "name": "lineNumber",
      "in": "path",
      "description": "Specifies line number",
      "required": true,
      "type": "integer",
      "format": "int32"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/currency": {
   "get": {
    "tags": [
     "Currency"
    ],
    "summary": "Gets all available Currencies",
    "operationId": "Currency_GetAllCurrencies",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CurrencyDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/currency/{curyId}": {
   "get": {
    "tags": [
     "Currency"
    ],
    "summary": "Get a specific Currency",
    "operationId": "Currency_GetSpecificCurrency",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "curyId",
      "in": "path",
      "description": "",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CurrencyDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a range of customers",
    "operationId": "Customer_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "name",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "status",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
       "Active",
       "OnHold",
       "CreditHold",
       "Inactive",
       "OneTime"
      ]
     },
     {
      "name": "corporateId",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "vatRegistrationId",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "createdDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "createdDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CustomerDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "Customer"
    ],
    "summary": "Creates a customer",
    "operationId": "Customer_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "customer",
      "description": "Defines the data for the customer to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CustomerUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/balance": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get the balance for a range of customers",
    "operationId": "Customer_GetAllCustomerBalance",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CustomerBalanceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerCd}": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a specific customer",
    "operationId": "Customer_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerCd",
      "in": "path",
      "description": "Identifies the customer",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CustomerDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "Customer"
    ],
    "summary": "Updates a specific customer",
    "operationId": "Customer_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "customerCd",
      "in": "path",
      "description": "Identifies the customer to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "customer",
      "description": "The data to update for the customer",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CustomerUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerCd}/balance": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a specific customer's balance",
    "operationId": "Customer_GetCustomerBalance",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerCd",
      "in": "path",
      "description": "Identifies the customer for which to return data",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CustomerBalanceDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerCd}/contact": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a range of Contacts of a specific customer",
    "operationId": "Customer_GetAllContactsForCustomer",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerCd",
      "in": "path",
      "description": "",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/ContactDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerCd}/salesorder": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a range of SO Orders of a specific customer",
    "operationId": "Customer_GetAllOrderForCustomer",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerCd",
      "in": "path",
      "description": "",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SalesOrderDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerCd}/salesorderbasic": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a range of SO Orders Basic of a specific customer",
    "operationId": "Customer_GetAllSalesOrderBasicForCustomer",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerCd",
      "in": "path",
      "description": "",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SalesOrderBasicDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerNumber}/cashSale": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a range of cash sales for a specific customer",
    "operationId": "Customer_GetAllCashSalesForCustomer",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerNumber",
      "in": "path",
      "description": "Identifies the customer for which to return data",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CashSaleDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerNumber}/document": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Gets a range of documents for a specific customer",
    "operationId": "Customer_GetAllDocumentsForCustomer",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerNumber",
      "in": "path",
      "description": "Identifies the customer for which to return data",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CustomerDocumentDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customer/{customerNumber}/invoice": {
   "get": {
    "tags": [
     "Customer"
    ],
    "summary": "Get a range of invoices for a specific customer",
    "operationId": "Customer_GetAllInvoicesForCustomer",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "customerNumber",
      "in": "path",
      "description": "Identifies the customer for which to return data",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CustomerInvoiceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customerdocument": {
   "get": {
    "tags": [
     "CustomerDocument"
    ],
    "summary": "Gets a range of Customer Documents",
    "operationId": "CustomerDocument_GetAllDocuments",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CustomerDocumentDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customerinvoice": {
   "get": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Get a range of Invoices",
    "operationId": "CustomerInvoice_GetAllInvoices",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/CustomerInvoiceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Create an Invoice",
    "operationId": "CustomerInvoice_CreateInvoice",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "invoice",
      "description": "Defines the data for the Invoice to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CustomerInvoiceUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customerinvoice/{invoiceNumber}": {
   "get": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Get a specific Invoice",
    "operationId": "CustomerInvoice_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Identifies the Invoice",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CustomerInvoiceDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Update a specific Invoice",
    "operationId": "CustomerInvoice_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Identifies the Invoice to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "invoice",
      "description": "Defines the data for the Invoice to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CustomerInvoiceUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customerinvoice/{invoiceNumber}/action/release": {
   "post": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Release invoice operation",
    "operationId": "CustomerInvoice_ReleaseInvoice",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Reference number of the invoice to be released",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "releaseActionDto",
      "description": "The action the dto use to condition the action",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ReleaseInvoiceActionDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleaseInvoiceActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customerinvoice/{invoiceNumber}/action/reverse": {
   "post": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Reverse an Invoice",
    "operationId": "CustomerInvoice_ReverseInvoice",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Reference number of the released invoice to be reversed",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "reverseActionDto",
      "description": "The action the dto use to condition the action",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ReverseInvoiceActionDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReverseInvoiceActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customerinvoice/{invoiceNumber}/attachment": {
   "post": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Creates an attachment and associates it with an invoice. If the file already exists, a new revision is created.",
    "operationId": "CustomerInvoice_CreateHeaderAttachment",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Identifies the invoice",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/customerinvoice/{invoiceNumber}/{lineNumber}/attachment": {
   "post": {
    "tags": [
     "CustomerInvoice"
    ],
    "summary": "Creates an attachment and associates it with a certain invoice line. If the file already exists, a new revision is created.",
    "operationId": "CustomerInvoice_CreateLineAttachment",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Identifies the invoice",
      "required": true,
      "type": "string"
     },
     {
      "name": "lineNumber",
      "in": "path",
      "description": "Specifies line number",
      "required": true,
      "type": "integer",
      "format": "int32"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/dimension": {
   "get": {
    "tags": [
     "Dimension"
    ],
    "summary": "Get a list of all Dimension names/IDs",
    "operationId": "Dimension_GetDimensionList",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "type": "string"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/dimension/{dimensionId}": {
   "get": {
    "tags": [
     "Dimension"
    ],
    "summary": "Get a specific Dimension",
    "operationId": "Dimension_GetDimension",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "dimensionId",
      "in": "path",
      "description": "",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/DtoDimension"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/dimension/{dimensionId}/{segmentId}": {
   "get": {
    "tags": [
     "Dimension"
    ],
    "summary": "Get a specific Segment for a specific Dimension",
    "operationId": "Dimension_GetSegment",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "dimensionId",
      "in": "path",
      "description": "Identifies the Dimension",
      "required": true,
      "type": "string"
     },
     {
      "name": "segmentId",
      "in": "path",
      "description": "Identifies the Segment",
      "required": true,
      "type": "integer",
      "format": "int32"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/DtoSegment"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "Dimension"
    ],
    "summary": "Update a Segment",
    "operationId": "Dimension_UpdateSegment",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "dimensionId",
      "in": "path",
      "description": "Identifies the Dimension for which the Segment is defined",
      "required": true,
      "type": "string"
     },
     {
      "name": "segmentId",
      "in": "path",
      "description": "Identifies the Segment",
      "required": true,
      "type": "integer",
      "format": "int32"
     },
     {
      "in": "body",
      "name": "update",
      "description": "Defines the data for the Segment to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/DtoSegmentUpdate"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/dimension/{dimensionId}/{segmentId}/publicid/{publicId}": {
   "get": {
    "tags": [
     "Dimension"
    ],
    "summary": "Get a specific SegmentValue for a specific Segment for a specific Dimension",
    "operationId": "Dimension_GetSegmentValue",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "dimensionId",
      "in": "path",
      "description": "Identifies the Dimension",
      "required": true,
      "type": "string"
     },
     {
      "name": "segmentId",
      "in": "path",
      "description": "Identifies the Segment",
      "required": true,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "publicId",
      "in": "path",
      "description": "Identifies the SegmentValue by its publicId",
      "required": true,
      "type": "string",
      "format": "uuid"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/DtoSegmentValue"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/dimension/{dimensionId}/{segmentId}/{valueId}": {
   "get": {
    "tags": [
     "Dimension"
    ],
    "summary": "Get a specific SegmentValue for a specific Segment for a specific Dimension",
    "operationId": "Dimension_GetSegmentValue1",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "dimensionId",
      "in": "path",
      "description": "Identifies the Dimension",
      "required": true,
      "type": "string"
     },
     {
      "name": "segmentId",
      "in": "path",
      "description": "Identifies the Segment",
      "required": true,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "valueId",
      "in": "path",
      "description": "Identifies the SegmentValue by Id. Must be Base64 encoded.",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/DtoSegmentValue"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/employee": {
   "get": {
    "tags": [
     "Employee"
    ],
    "summary": "Get a range of employees",
    "operationId": "Employee_GetAllEmplyee",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/EmployeeDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/employee/{employeeCd}": {
   "get": {
    "tags": [
     "Employee"
    ],
    "summary": "Get a specific employee",
    "operationId": "Employee_GetEmployee",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "employeeCd",
      "in": "path",
      "description": "Identifies the employee",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/EmployeeDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/financialPeriod": {
   "get": {
    "tags": [
     "FinancialPeriod"
    ],
    "summary": "Get a range of Financial Periods",
    "operationId": "FinancialPeriod_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/FinancialPeriodDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/financialPeriod/{financialPeriodId}": {
   "get": {
    "tags": [
     "FinancialPeriod"
    ],
    "summary": "Get a specific Financial Period",
    "operationId": "FinancialPeriod_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "financialPeriodId",
      "in": "path",
      "description": "Identifies the Financial Period",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/FinancialPeriodDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/generalLedgerBalance": {
   "get": {
    "tags": [
     "GeneralLedgerBalance"
    ],
    "summary": "Get a range of General Ledger Balances",
    "operationId": "GeneralLedgerBalance_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "periodId",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "periodIdCondition",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "accountId",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "yearClosed",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "balanceType",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
       "Actual",
       "Report",
       "Statistical",
       "Budget"
      ]
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/GeneralLedgerBalanceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventory": {
   "get": {
    "tags": [
     "Inventory"
    ],
    "summary": "Get a range of Inventory items",
    "operationId": "Inventory_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "alternateID",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/InventoryDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "Inventory"
    ],
    "summary": "Create an inventory item",
    "operationId": "Inventory_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "inventory",
      "description": "Define the data for the inventory item to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventory/{inventoryCd}": {
   "put": {
    "tags": [
     "Inventory"
    ],
    "summary": "Update a specific inventory item",
    "operationId": "Inventory_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "inventoryCd",
      "in": "path",
      "description": "Identifies the inventory item to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "inventory",
      "description": "The data to update for inventory item",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventory/{inventoryNumber}": {
   "get": {
    "tags": [
     "Inventory"
    ],
    "summary": "Get a specific Inventory item",
    "operationId": "Inventory_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "inventoryNumber",
      "in": "path",
      "description": "Identifies the Inventory item",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/InventoryDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryReceipt": {
   "get": {
    "tags": [
     "InventoryReceipt"
    ],
    "summary": "Get a range of Inventory Receipts",
    "operationId": "InventoryReceipt_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/InventoryReceiptDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "InventoryReceipt"
    ],
    "summary": "Create an inventory item",
    "operationId": "InventoryReceipt_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "inventoryReceipt",
      "description": "Define the data for the inventory issue to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryReceiptUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryReceipt/{inventoryReceiptNumber}": {
   "get": {
    "tags": [
     "InventoryReceipt"
    ],
    "summary": "Get a specific Inventory Receipt document",
    "operationId": "InventoryReceipt_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "inventoryReceiptNumber",
      "in": "path",
      "description": "Identifies the Inventory Issue document",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/InventoryReceiptDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryReceipt/{invoiceNumber}/action/release": {
   "post": {
    "tags": [
     "InventoryReceipt"
    ],
    "summary": "Release inventory operation",
    "operationId": "InventoryReceipt_ReleaseDocument",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Reference number of the released issue to be released",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleaseInventoryDocumentActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryReceipt/{receiptRefNumber}": {
   "put": {
    "tags": [
     "InventoryReceipt"
    ],
    "summary": "Update a specific inventory item",
    "operationId": "InventoryReceipt_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "receiptRefNumber",
      "in": "path",
      "description": "Identifies the inventory receipt to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "receipt",
      "description": "The data to update for inventory receipt",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryReceiptUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryTransfer": {
   "get": {
    "tags": [
     "InventoryTransfer"
    ],
    "summary": "Get a range of Inventory Transfers",
    "operationId": "InventoryTransfer_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/InventoryTransferDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "InventoryTransfer"
    ],
    "summary": "Create an inventory transfer",
    "operationId": "InventoryTransfer_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "inventoryTransfer",
      "description": "Define the data for the inventory transfer to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryTransferUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryTransfer/{inventoryTransferNumber}": {
   "get": {
    "tags": [
     "InventoryTransfer"
    ],
    "summary": "Get a specific Inventory Transfer document",
    "operationId": "InventoryTransfer_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "inventoryTransferNumber",
      "in": "path",
      "description": "Identifies the Inventory Transfer document",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/InventoryTransferDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryTransfer/{transferNumber}/action/release": {
   "post": {
    "tags": [
     "InventoryTransfer"
    ],
    "summary": "Release inventory operation",
    "operationId": "InventoryTransfer_ReleaseDocument",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "transferNumber",
      "in": "path",
      "description": "Reference number of the released transfer to be released",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleaseInventoryDocumentActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryTransfer/{transferRefNumber}": {
   "put": {
    "tags": [
     "InventoryTransfer"
    ],
    "summary": "Update a specific inventory transfer",
    "operationId": "InventoryTransfer_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "transferRefNumber",
      "in": "path",
      "description": "Identifies the inventory transfer to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "transfer",
      "description": "The data to update for inventory transfer",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryTransferUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryadjustment": {
   "get": {
    "tags": [
     "InventoryAdjustment"
    ],
    "summary": "Get a range of Inventory Adjustment Dto",
    "operationId": "InventoryAdjustment_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/InventoryAdjustmentDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "InventoryAdjustment"
    ],
    "summary": "Create an inventory item",
    "operationId": "InventoryAdjustment_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "inventoryAdjustment",
      "description": "Define the data for the inventory adjustment to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryAdjustmentUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryadjustment/{adjRefNumber}": {
   "put": {
    "tags": [
     "InventoryAdjustment"
    ],
    "summary": "Update a specific inventory item",
    "operationId": "InventoryAdjustment_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "adjRefNumber",
      "in": "path",
      "description": "Identifies the inventory item to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "adjustment",
      "description": "The data to update for inventory item",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryAdjustmentUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryadjustment/{adjRefNumber}/action/release": {
   "post": {
    "tags": [
     "InventoryAdjustment"
    ],
    "summary": "Release inventory document action",
    "operationId": "InventoryAdjustment_ReleaseDocument",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "adjRefNumber",
      "in": "path",
      "description": "Reference number of the released adjustment to be released",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleaseInventoryDocumentActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryadjustment/{inventoryAdjustmentNumber}": {
   "get": {
    "tags": [
     "InventoryAdjustment"
    ],
    "summary": "Get a specific Inventory Adjustment document",
    "operationId": "InventoryAdjustment_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "inventoryAdjustmentNumber",
      "in": "path",
      "description": "Identifies the Inventory Adjustment document",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/InventoryAdjustmentDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryissue": {
   "get": {
    "tags": [
     "InventoryIssue"
    ],
    "summary": "Get a range of Inventory items",
    "operationId": "InventoryIssue_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/InventoryIssueDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "InventoryIssue"
    ],
    "summary": "Create an inventory item",
    "operationId": "InventoryIssue_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "inventoryIssue",
      "description": "Define the data for the inventory issue to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryIssueUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryissue/{inventoryIssueNumber}": {
   "get": {
    "tags": [
     "InventoryIssue"
    ],
    "summary": "Get a specific Inventory Issue document",
    "operationId": "InventoryIssue_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "inventoryIssueNumber",
      "in": "path",
      "description": "Identifies the Inventory Issue document",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/InventoryIssueDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryissue/{invoiceNumber}/action/release": {
   "post": {
    "tags": [
     "InventoryIssue"
    ],
    "summary": "Release inventory operation",
    "operationId": "InventoryIssue_ReleaseDocument",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Reference number of the released issue to be released",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleaseInventoryDocumentActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventoryissue/{issueRefNumber}": {
   "put": {
    "tags": [
     "InventoryIssue"
    ],
    "summary": "Update a specific inventory item",
    "operationId": "InventoryIssue_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "issueRefNumber",
      "in": "path",
      "description": "Identifies the inventory item to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "issue",
      "description": "The data to update for inventory item",
      "required": true,
      "schema": {
       "$ref": "#/definitions/InventoryIssueUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/inventorysummary/{inventoryNumber}": {
   "get": {
    "tags": [
     "InventorySummary"
    ],
    "summary": "Get a range of InventorySummary",
    "operationId": "InventorySummary_GetAllInventorySummary",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "inventoryNumber",
      "in": "path",
      "description": "",
      "required": true,
      "type": "string"
     },
     {
      "name": "warehouse",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "location",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/InventorySummaryDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/journaltransaction": {
   "get": {
    "tags": [
     "JournalTransaction"
    ],
    "summary": "Get a range of Journal Transactions",
    "operationId": "JournalTransaction_GetAllJournalTransactions",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/JournalTransactionDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "JournalTransaction"
    ],
    "summary": "Create a Journal Transaction",
    "operationId": "JournalTransaction_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "journalTransaction",
      "description": "Defines the data for the Journal Transaction to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/JournalTransactionUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/journaltransaction/{journalTransactionNumber}": {
   "get": {
    "tags": [
     "JournalTransaction"
    ],
    "summary": "Get a specific Journal Transaction",
    "operationId": "JournalTransaction_GetSpecificJournalTransactions",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "journalTransactionNumber",
      "in": "path",
      "description": "Identifies the Journal Transaction",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/JournalTransactionDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "JournalTransaction"
    ],
    "summary": "Update a Journal Transaction",
    "operationId": "JournalTransaction_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "journalTransactionNumber",
      "in": "path",
      "description": "Identifies the Journal Transaction to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "journalTransaction",
      "description": "Defines the data for the Journal Transaction to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/JournalTransactionUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/ledger": {
   "get": {
    "tags": [
     "Ledger"
    ],
    "summary": "Get a range of Ledgers",
    "operationId": "Ledger_GetAllLedgers",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/LedgerDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/packagingType": {
   "get": {
    "tags": [
     "PackagingType"
    ],
    "summary": "Get a range of SO PackagingTypes",
    "operationId": "PackagingType_GetAllPackagingTypes",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/PackagingTypeDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/packagingType/{boxId}": {
   "get": {
    "tags": [
     "PackagingType"
    ],
    "summary": "Get a specific PackagingType",
    "operationId": "PackagingType_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "boxId",
      "in": "path",
      "description": "Identifies the PackagingType",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/PackagingTypeDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/payment": {
   "get": {
    "tags": [
     "Payment"
    ],
    "summary": "Get a range of Payments",
    "operationId": "Payment_GetAllPayments",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/PaymentDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "Payment"
    ],
    "summary": "Create a Payment",
    "operationId": "Payment_CreatePayment",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "payment",
      "description": "Defines the data for the Payment to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/PaymentUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/payment/{paymentNumber}": {
   "get": {
    "tags": [
     "Payment"
    ],
    "summary": "Get a specific Payment",
    "operationId": "Payment_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "paymentNumber",
      "in": "path",
      "description": "Identifies the Payment",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/PaymentDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "Payment"
    ],
    "summary": "Update a specific Payment",
    "operationId": "Payment_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "paymentNumber",
      "in": "path",
      "description": "Identifies the Payment to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "payment",
      "description": "Defines the data for the Payment to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/PaymentUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/payment/{paymentNumber}/action/release": {
   "post": {
    "tags": [
     "Payment"
    ],
    "summary": "Release payment operation",
    "operationId": "Payment_ReleasePayment",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "paymentNumber",
      "in": "path",
      "description": "Reference number of the payment to be released",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "releaseActionDto",
      "description": "Contains the type of the payment",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ReleasePaymentActionDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleasePaymentActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/paymentmethod": {
   "get": {
    "tags": [
     "PaymentMethod"
    ],
    "summary": "Get a range of Payment Method",
    "operationId": "PaymentMethod_GetAllPaymentMethod",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/PaymentMethodDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/paymentmethod/{paymentMethodNumber}": {
   "get": {
    "tags": [
     "PaymentMethod"
    ],
    "summary": "Get a specific Payment Method",
    "operationId": "PaymentMethod_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "paymentMethodNumber",
      "in": "path",
      "description": "Identifies the Payment Method",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/PaymentMethodDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/purchaseorderbasic": {
   "get": {
    "tags": [
     "PurchaseOrderBasic"
    ],
    "summary": "Get a range of Sales Order",
    "operationId": "PurchaseOrderBasic_GetAllOrderBasic",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/PurchaseOrderBasicDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/purchaseorderbasic/{orderNbr}": {
   "get": {
    "tags": [
     "PurchaseOrderBasic"
    ],
    "summary": "Get a specific Purchase Order",
    "operationId": "PurchaseOrderBasic_GetPurchaseOrderBasic",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "orderNbr",
      "in": "path",
      "description": "Identifies the Purchase Order",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/PurchaseOrderBasicDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorder": {
   "get": {
    "tags": [
     "SalesOrder"
    ],
    "summary": "Get a range of SO Orders",
    "operationId": "SalesOrder_GetAllOrders",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SalesOrderDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "SalesOrder"
    ],
    "summary": "Create a Sale Order",
    "operationId": "SalesOrder_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "saleOrderUpdateDto",
      "description": "Defines the data for the Sale Order to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SalesOrderUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorder/{orderNbr}": {
   "get": {
    "tags": [
     "SalesOrder"
    ],
    "summary": "Get a specific SO Order",
    "operationId": "SalesOrder_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "orderNbr",
      "in": "path",
      "description": "Identifies the So Order",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SalesOrderDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorder/{saleOrderNumber}/action/createShipment": {
   "post": {
    "tags": [
     "SalesOrder"
    ],
    "summary": "Crete shipment operation",
    "operationId": "SalesOrder_CreateShipmentAction",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "saleOrderNumber",
      "in": "path",
      "description": "Reference number of the sale oreder from which the shipment will be created",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "createShipmentActionDto",
      "description": "Defines the data for the action",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CreateShipmentActionDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CreateShipmentActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorder/{salesOrderNumber}": {
   "put": {
    "tags": [
     "SalesOrder"
    ],
    "summary": "Update a specific Sale Order",
    "operationId": "SalesOrder_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "salesOrderNumber",
      "in": "path",
      "description": "Identifies the Sale Order to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "saleOrderUpdateDto",
      "description": "Defines the data for the Sale Order to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SalesOrderUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorderbasic": {
   "get": {
    "tags": [
     "SalesOrderBasic"
    ],
    "summary": "Get a range of SO Orders",
    "operationId": "SalesOrderBasic_GetAllOrders",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SalesOrderBasicDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "SalesOrderBasic"
    ],
    "summary": "Create a Sale Order",
    "operationId": "SalesOrderBasic_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "saleOrderUpdateDto",
      "description": "Defines the data for the Sale Order to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SalesOrderBasicUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorderbasic/{orderNbr}": {
   "get": {
    "tags": [
     "SalesOrderBasic"
    ],
    "summary": "Get a specific SO Order",
    "operationId": "SalesOrderBasic_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "orderNbr",
      "in": "path",
      "description": "Identifies the So Order",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SalesOrderBasicDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorderbasic/{saleOrderNumber}/action/createShipment": {
   "post": {
    "tags": [
     "SalesOrderBasic"
    ],
    "summary": "Crete shipment operation",
    "operationId": "SalesOrderBasic_CreateShipmentAction",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "saleOrderNumber",
      "in": "path",
      "description": "Reference number of the sale oreder from which the shipment will be created",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "createShipmentActionDto",
      "description": "Defines the data for the action",
      "required": true,
      "schema": {
       "$ref": "#/definitions/CreateShipmentActionDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/CreateShipmentActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesorderbasic/{salesOrderNumber}": {
   "put": {
    "tags": [
     "SalesOrderBasic"
    ],
    "summary": "Update a specific Sale Order",
    "operationId": "SalesOrderBasic_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "salesOrderNumber",
      "in": "path",
      "description": "Identifies the Sale Order to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "saleOrderUpdateDto",
      "description": "Defines the data for the Sale Order to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SalesOrderBasicUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesordertype": {
   "get": {
    "tags": [
     "SalesOrderType"
    ],
    "summary": "Get a range of SO OrderTypes",
    "operationId": "SalesOrderType_GetAllSalesOrderTypes",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SalesOrderTypeDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/salesordertype/{orderType}": {
   "get": {
    "tags": [
     "SalesOrderType"
    ],
    "summary": "Get a specific SO OrderType",
    "operationId": "SalesOrderType_GetSalesOrderType",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "orderType",
      "in": "path",
      "description": "Identifies the SO OrderType",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SalesOrderTypeDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/shipment": {
   "get": {
    "tags": [
     "Shipment"
    ],
    "summary": "Get a range of SO Shipments",
    "operationId": "Shipment_GetAllShipments",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/ShipmentDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/shipment/{shipmentNbr}": {
   "get": {
    "tags": [
     "Shipment"
    ],
    "summary": "Get a specific Shipment",
    "operationId": "Shipment_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "shipmentNbr",
      "in": "path",
      "description": "Identifies the Shipment",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ShipmentDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/shipment/{shipmentNumber}": {
   "put": {
    "tags": [
     "Shipment"
    ],
    "summary": "Update a specific Shipment",
    "operationId": "Shipment_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "shipmentNumber",
      "in": "path",
      "description": "Identifies the Shipment to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "shipmentUpdateDto",
      "description": "Defines the data for the Shipment to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ShipmentUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/stocktake": {
   "get": {
    "tags": [
     "Stocktake"
    ],
    "summary": "Get a range of stocktakes",
    "operationId": "Stocktake_GetAllStocktakes",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "warehouse",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "location",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "inventory",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lotSerialNumber",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "summaryStatus",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
       "Cancelled",
       "Completed",
       "Counting",
       "Entering"
      ]
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "startWithLine",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "endWithLine",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "freezeDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "freezeDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "expirationDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "expirationDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "status",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
       "NotEntered",
       "Entered",
       "Skipped"
      ]
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/StocktakeDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/stocktake/{referenceNumber}": {
   "get": {
    "tags": [
     "Stocktake"
    ],
    "summary": "Get a specific",
    "operationId": "Stocktake_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "referenceNumber",
      "in": "path",
      "description": "Identifies the Stocktake",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/StocktakeDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "Stocktake"
    ],
    "summary": "Update a specific stocktake",
    "operationId": "Stocktake_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "referenceNumber",
      "in": "path",
      "description": "Identifies the stocktake to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "stocktake",
      "description": "The data to update for stocktake",
      "required": true,
      "schema": {
       "$ref": "#/definitions/StocktakeUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/subaccount": {
   "get": {
    "tags": [
     "Subaccount"
    ],
    "summary": "Get all SubAccounts",
    "operationId": "Subaccount_GetAllSubaccounts",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SubAccountDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/subaccount/{subCd}": {
   "get": {
    "tags": [
     "Subaccount"
    ],
    "summary": "Get a specific SubAccount",
    "operationId": "Subaccount_GetSubaccount",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "subCd",
      "in": "path",
      "description": "Identifies the SubAccount",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SubAccountDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get a range of suppliers",
    "operationId": "Supplier_GetAll",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SupplierDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "Supplier"
    ],
    "summary": "Create a supplier",
    "operationId": "Supplier_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "supplier",
      "description": "Define the data for the supplier to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SupplierUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/POBalance": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get the PO balance of a range of suppliers",
    "operationId": "Supplier_GetAllSupplierPOBalance",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SupplierPOBalanceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/balance": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get the balance of a range of suppliers",
    "operationId": "Supplier_GetAllSupplierBalance",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SupplierBalanceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/{supplierCd}": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get a specific supplier",
    "operationId": "Supplier_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "supplierCd",
      "in": "path",
      "description": "Identifies the supplier",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SupplierDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "put": {
    "tags": [
     "Supplier"
    ],
    "summary": "Update a specific supplier",
    "operationId": "Supplier_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "supplierCd",
      "in": "path",
      "description": "Identifies the supplier to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "supplier",
      "description": "The data to update for supplier",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SupplierUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/{supplierCd}/POBalance": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get a specific supplier's PO balance",
    "operationId": "Supplier_GetSupplierPOBalance",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "supplierCd",
      "in": "path",
      "description": "Indentifies the supplier for witch to return data",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SupplierPOBalanceDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/{supplierCd}/balance": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get a specific supplier's PO balance",
    "operationId": "Supplier_GetSupplierBalance",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "supplierCd",
      "in": "path",
      "description": "Indentifies the supplier for witch to return data",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SupplierBalanceDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/{supplierCd}/contact": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get a range of a Supplier of a specific supplier",
    "operationId": "Supplier_GetAllContactForSupplier",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "supplierCd",
      "in": "path",
      "description": "",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/ContactDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/{supplierNumber}/document": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Gets a range of documents for a specific supplier",
    "operationId": "Supplier_GetAllDocumentsForSupplier",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "supplierNumber",
      "in": "path",
      "description": "Identifies the supplier for which to return data",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SupplierDocumentDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplier/{supplierNumber}/invoice": {
   "get": {
    "tags": [
     "Supplier"
    ],
    "summary": "Get a range of invoices for a specific supplier",
    "operationId": "Supplier_GetAllInvoicesForSupplier",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "supplierNumber",
      "in": "path",
      "description": "Identifies the supplier for which to return data",
      "required": true,
      "type": "string"
     },
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SupplierInvoiceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplierInvoice": {
   "get": {
    "tags": [
     "SupplierInvoice"
    ],
    "summary": "Get a range of Invoices",
    "operationId": "SupplierInvoice_GetAllInvoices",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SupplierInvoiceDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   },
   "post": {
    "tags": [
     "SupplierInvoice"
    ],
    "summary": "Create an SupplierInvoice",
    "operationId": "SupplierInvoice_Post",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "supplierInvoice",
      "description": "Defines the data for the SupplierInvoice to create",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SupplierInvoiceUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplierInvoice/{invoiceNumber}": {
   "get": {
    "tags": [
     "SupplierInvoice"
    ],
    "summary": "Get a specific Invoice",
    "operationId": "SupplierInvoice_Get",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Identifies the Invoice",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/SupplierInvoiceDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplierInvoice/{invoiceNumber}/action/release": {
   "post": {
    "tags": [
     "SupplierInvoice"
    ],
    "summary": "Release invoice operation",
    "operationId": "SupplierInvoice_ReleaseInvoice",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "invoiceNumber",
      "in": "path",
      "description": "Reference number of the released invoice to be reversed",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "releaseActionDto",
      "description": "",
      "required": true,
      "schema": {
       "$ref": "#/definitions/ReleaseSupplierInvoiceActionDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/ReleaseSupplierInvoiceActionResultDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplierInvoice/{supplierInvoiceNumber}": {
   "put": {
    "tags": [
     "SupplierInvoice"
    ],
    "summary": "Update a specific SupplierInvoice",
    "operationId": "SupplierInvoice_Put",
    "consumes": [
     "application/json",
     "text/json",
     "application/x-www-form-urlencoded",
     "application/xml",
     "text/xml"
    ],
    "produces": [
     "application/json",
     "text/json"
    ],
    "parameters": [
     {
      "name": "supplierInvoiceNumber",
      "in": "path",
      "description": "Identifies the SupplierInvoice to update",
      "required": true,
      "type": "string"
     },
     {
      "in": "body",
      "name": "supplierInvoice",
      "description": "Defines the data for the Invoice to update",
      "required": true,
      "schema": {
       "$ref": "#/definitions/SupplierInvoiceUpdateDto"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/Object"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/supplierdocument": {
   "get": {
    "tags": [
     "SupplierDocument"
    ],
    "summary": "Gets a range of supplier documents",
    "operationId": "SupplierDocument_GetAllDocumentsForSupplier",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "greaterThanValue",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "released",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "orderBy",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/SupplierDocumentDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/vat": {
   "get": {
    "tags": [
     "Vat"
    ],
    "summary": "Get a range of Vats",
    "operationId": "Vat_GetAllVats",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/VatInformationDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/vat/{vatId}": {
   "get": {
    "tags": [
     "Vat"
    ],
    "summary": "Get a specific Vat",
    "operationId": "Vat_GetVat",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "vatId",
      "in": "path",
      "description": "Identifies the Vat",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/VatInformationDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/vatCategory": {
   "get": {
    "tags": [
     "VatCategory"
    ],
    "summary": "Get a range of VatCategories",
    "operationId": "VatCategory_GetAllVatCategories",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "numberToRead",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "skipRecords",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32"
     },
     {
      "name": "lastModifiedDateTime",
      "in": "query",
      "required": false,
      "type": "string"
     },
     {
      "name": "lastModifiedDateTimeCondition",
      "in": "query",
      "required": false,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/VatCategoryDto"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/controller/api/v1/vatCategory/{taxCategoryId}": {
   "get": {
    "tags": [
     "VatCategory"
    ],
    "summary": "Get a specific VatCategory",
    "operationId": "VatCategory_GetVatCategory",
    "consumes": [],
    "produces": [
     "application/json",
     "text/json",
     "application/xml",
     "text/xml"
    ],
    "parameters": [
     {
      "name": "taxCategoryId",
      "in": "path",
      "description": "Identifies the VatCategory",
      "required": true,
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/VatCategoryDto"
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     },
     {
      "ipp-company-id": []
     },
     {
      "ipp-application-type": []
     }
    ]
   }
  },
  "/security/api/v1/testconnection": {
   "get": {
    "tags": [
     "Security endpoint."
    ],
    "summary": "Test connection",
    "description": "Returns \"OK\" as plain text if the test connection succeded.",
    "operationId": "testConnection",
    "produces": [
     "application/json"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "successful operation",
      "schema": {
       "type": "string"
      }
     }
    }
   }
  },
  "/security/api/v1/token": {
   "post": {
    "tags": [
     "Security endpoint."
    ],
    "summary": "Get security token using credentials.",
    "description": "Issue token for the client based on provided User Credentials",
    "operationId": "getSecurityToken",
    "consumes": [
     "application/json",
     "application/xml"
    ],
    "produces": [
     "application/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "body",
      "required": false,
      "schema": {
       "$ref": "#/definitions/UserCredentials"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Everything was ok."
     },
     "400": {
      "description": "Bad Request. Invalid JSON string"
     },
     "500": {
      "description": "Mandatory parameter is either null or empty. Check the returned error code."
     }
    }
   },
   "delete": {
    "tags": [
     "Security endpoint."
    ],
    "operationId": "revokeSecurityToken",
    "parameters": [
     {
      "in": "body",
      "name": "body",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "default": {
      "description": "successful operation"
     }
    },
    "consumes": [
     "application/json",
     "application/xml"
    ]
   }
  },
  "/security/api/v1/token/usercontexts": {
   "get": {
    "tags": [
     "Security endpoint."
    ],
    "summary": "Get the companies available for this token.",
    "description": "",
    "operationId": "getAvailableUserContexts",
    "produces": [
     "application/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "body",
      "required": false,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "successful operation",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/ContextInformation"
       }
      }
     }
    },
    "security": [
     {
      "vna_oauth": [
       "financialstasks"
      ]
     }
    ],
    "consumes": [
     "application/json",
     "application/xml"
    ]
   }
  }
 },
 "securityDefinitions": {
  "vna_oauth": {
   "type": "oauth2",
   "tokenUrl": "/API/security/api/v1/token",
   "flow": "password",
   "scopes": {
    "financialstasks": "Access to Visma.net Financial endpoints"
   }
  }
 },
 "definitions": {
  "VniToken": {
   "properties": {
    "token": {
     "type": "string"
    },
    "token_type": {
     "type": "string"
    },
    "scope": {
     "type": "string"
    }
   }
  },
  "ContextInformation": {
   "properties": {
    "id": {
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "type": "string"
    },
    "type": {
     "type": "string"
    }
   }
  },
  "UserCredentials": {
   "properties": {
    "email": {
     "type": "string"
    },
    "password": {
     "type": "string"
    }
   }
  },
  "AccountDto": {
   "properties": {
    "accountID": {
     "type": "integer",
     "format": "int32"
    },
    "accountCD": {
     "type": "string"
    },
    "accountClass": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "Asset",
      "Liability",
      "Income",
      "Expense"
     ]
    },
    "active": {
     "type": "boolean"
    },
    "description": {
     "type": "string"
    },
    "useDefaultSub": {
     "type": "boolean"
    },
    "postOption": {
     "type": "string"
    },
    "currency": {
     "type": "string"
    },
    "taxCategory": {
     "type": "string"
    },
    "cashAccount": {
     "type": "boolean"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "AccountQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "AttachmentMetadataUpdateDto": {
   "properties": {
    "sendToAutoinvoice": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    }
   }
  },
  "DtoValue[Boolean]": {
   "properties": {
    "value": {
     "type": "boolean"
    }
   }
  },
  "BranchQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "BranchDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "mainAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "mainContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "deliveryAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "deliveryContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "corporateId": {
     "type": "string"
    },
    "vatRegistrationId": {
     "type": "string"
    },
    "defaultCountry": {
     "$ref": "#/definitions/CountryDto"
    },
    "industryCode": {
     "$ref": "#/definitions/IndustryCodeDto"
    },
    "currency": {
     "$ref": "#/definitions/CurrencyDto"
    },
    "vatZone": {
     "$ref": "#/definitions/VatZoneDto"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "AddressDto": {
   "properties": {
    "addressId": {
     "type": "integer",
     "format": "int32"
    },
    "addressLine1": {
     "type": "string"
    },
    "addressLine2": {
     "type": "string"
    },
    "addressLine3": {
     "type": "string"
    },
    "postalCode": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "country": {
     "$ref": "#/definitions/CountryDto"
    },
    "county": {
     "$ref": "#/definitions/CountyDto"
    }
   }
  },
  "ContactInfoDto": {
   "properties": {
    "contactId": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    },
    "attention": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "web": {
     "type": "string"
    },
    "phone1": {
     "type": "string"
    },
    "phone2": {
     "type": "string"
    },
    "fax": {
     "type": "string"
    }
   }
  },
  "CountryDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "IndustryCodeDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "CurrencyDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "VatZoneDto": {
   "properties": {
    "defaultVatCategory": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "CountyDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "CarrierDto": {
   "properties": {
    "carrierId": {
     "type": "string"
    },
    "carrierDescription": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a Carrier in CarrierController. Used for getting data."
  },
  "CarrierQueryParameters": {
   "properties": {
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "CashSaleDto": {
   "properties": {
    "creditTerms": {
     "$ref": "#/definitions/CreditTermsDto"
    },
    "cashAccount": {
     "type": "string"
    },
    "paymentReference": {
     "type": "string"
    },
    "cashSaleLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/CashSaleLineDto"
     }
    },
    "hold": {
     "type": "boolean"
    },
    "detailTotal": {
     "type": "number",
     "format": "double"
    },
    "detailTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "salesPersonID": {
     "type": "integer",
     "format": "int32"
    },
    "salesPersonDescr": {
     "type": "string"
    },
    "customer": {
     "$ref": "#/definitions/CustomerNumberDto"
    },
    "documentType": {
     "type": "string",
     "enum": [
      "Invoice",
      "DebitNote",
      "CreditNote",
      "Payment",
      "VoidPayment",
      "Prepayment",
      "Refund",
      "FinCharge",
      "SmallBalanceWo",
      "SmallCreditWo",
      "CashSale",
      "CashReturn",
      "Undefined",
      "NoUpdate"
     ]
    },
    "referenceNumber": {
     "type": "string"
    },
    "postPeriod": {
     "type": "string"
    },
    "financialPeriod": {
     "type": "string"
    },
    "documentDate": {
     "type": "string",
     "format": "date-time"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Scheduled",
      "Open",
      "Closed",
      "PendingPrint",
      "PendingEmail",
      "CreditHold",
      "CcHold"
     ]
    },
    "currencyId": {
     "type": "string"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "balanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "cashDiscount": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "customerRefNumber": {
     "type": "string"
    },
    "invoiceText": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "createdDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "note": {
     "type": "string"
    },
    "vatTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    }
   },
   "description": "This class represents a invoice in InvoiceController. Used by getting data."
  },
  "CreditTermsDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "CashSaleLineDto": {
   "properties": {
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryNumber": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "unitPrice": {
     "type": "number",
     "format": "double"
    },
    "unitPriceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "manualAmount": {
     "type": "number",
     "format": "double"
    },
    "manualAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "vatCode": {
     "$ref": "#/definitions/VatCodeDto"
    },
    "uom": {
     "type": "string"
    },
    "discountPercent": {
     "type": "number",
     "format": "double"
    },
    "discountAmount": {
     "type": "number",
     "format": "double"
    },
    "discountAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "manualDiscount": {
     "type": "boolean"
    },
    "subaccount": {
     "$ref": "#/definitions/SubAccountDto"
    },
    "salesperson": {
     "type": "string"
    },
    "deferralSchedule": {
     "type": "integer",
     "format": "int32"
    },
    "deferralCode": {
     "type": "string"
    },
    "discountCode": {
     "type": "string"
    },
    "note": {
     "type": "string"
    }
   }
  },
  "CustomerNumberDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "PaymentMethodIdDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "LocationDto": {
   "properties": {
    "countryId": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "AccountNumberDto": {
   "properties": {
    "type": {
     "type": "string",
     "enum": [
      "Asset",
      "Liability",
      "Income",
      "Expense"
     ]
    },
    "externalCode1": {
     "type": "string"
    },
    "externalCode2": {
     "type": "string"
    },
    "number": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "VatCodeDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "SubAccountDto": {
   "properties": {
    "description": {
     "type": "string"
    },
    "id": {
     "type": "integer",
     "format": "int32"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "segments": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SegmentDto"
     }
    }
   }
  },
  "SegmentDto": {
   "properties": {
    "segmentId": {
     "type": "integer",
     "format": "int32"
    },
    "segmentDescription": {
     "type": "string"
    },
    "segmentValue": {
     "type": "string"
    },
    "segmentValueDescription": {
     "type": "string"
    }
   }
  },
  "DocumentQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "released": {
     "type": "integer",
     "format": "int32"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "CashSaleUpdateDto": {
   "properties": {
    "paymentMethodId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "creditTermsId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "cashAccount": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentReference": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "cashSalesLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/CashSaleLinesUpdateDto"
     }
    },
    "referenceNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customerNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "documentDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "postPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "financialPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "invoiceText": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "salesPersonID": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "DtoValue[String]": {
   "properties": {
    "value": {
     "type": "string"
    }
   }
  },
  "CashSaleLinesUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "unitPriceInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "manualAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "accountNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatCodeId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "discountPercent": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "discountAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "manualDiscount": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "subaccount": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SegmentUpdateDto"
     }
    },
    "salesperson": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "deferralSchedule": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "deferralCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "DtoValue[DateTime]": {
   "properties": {
    "value": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "DtoValue[Nullable[Int32]]": {
   "properties": {
    "value": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "DtoValue[Int32]": {
   "properties": {
    "value": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "DtoValue[Decimal]": {
   "properties": {
    "value": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "SegmentUpdateDto": {
   "properties": {
    "segmentId": {
     "type": "string",
     "format": "byte"
    },
    "segmentValue": {
     "type": "string"
    }
   }
  },
  "ContactDto": {
   "properties": {
    "displayName": {
     "type": "string"
    },
    "active": {
     "type": "boolean"
    },
    "title": {
     "type": "string",
     "enum": [
      "Doctor",
      "Miss",
      "Mr",
      "Mrs",
      "Ms",
      "Prof"
     ]
    },
    "firstName": {
     "type": "string"
    },
    "lastName": {
     "type": "string"
    },
    "position": {
     "type": "string"
    },
    "businessAccount": {
     "type": "string"
    },
    "sameAsAccount": {
     "type": "boolean"
    },
    "address": {
     "$ref": "#/definitions/AddressDto"
    },
    "email": {
     "type": "string"
    },
    "web": {
     "type": "string"
    },
    "phone1": {
     "type": "string"
    },
    "phone2": {
     "type": "string"
    },
    "phone3": {
     "type": "string"
    },
    "fax": {
     "type": "string"
    },
    "contactMethod": {
     "type": "string",
     "enum": [
      "Any",
      "Email",
      "Mail",
      "Fax",
      "Phone"
     ]
    },
    "doNotCall": {
     "type": "boolean"
    },
    "doNotFax": {
     "type": "boolean"
    },
    "doNotEmail": {
     "type": "boolean"
    },
    "doNotMail": {
     "type": "boolean"
    },
    "noMassMail": {
     "type": "boolean"
    },
    "noMarketing": {
     "type": "boolean"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "contactId": {
     "type": "integer",
     "format": "int32"
    }
   },
   "description": "This class represents a contact in ContactController. Used by getting data."
  },
  "ContactUpdateDto": {
   "properties": {
    "active": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "title": {
     "$ref": "#/definitions/DtoValue[EmployeeTitles]"
    },
    "firstName": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "lastName": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "position": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "businessAccount": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "sameAsAccount": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "address": {
     "$ref": "#/definitions/DtoValue[AddressUpdateDto]"
    },
    "email": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "web": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone2": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone3": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "fax": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "contactMethod": {
     "$ref": "#/definitions/DtoValue[ContactMethods]"
    },
    "doNotCall": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "doNotFax": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "doNotEmail": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "doNotMail": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "noMassMail": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "noMarketing": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    }
   }
  },
  "DtoValue[EmployeeTitles]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Doctor",
      "Miss",
      "Mr",
      "Mrs",
      "Ms",
      "Prof"
     ]
    }
   }
  },
  "DtoValue[AddressUpdateDto]": {
   "properties": {
    "value": {
     "$ref": "#/definitions/AddressUpdateDto"
    }
   }
  },
  "DtoValue[ContactMethods]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Any",
      "Email",
      "Mail",
      "Fax",
      "Phone"
     ]
    }
   }
  },
  "AddressUpdateDto": {
   "properties": {
    "addressLine1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "addressLine2": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "addressLine3": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "postalCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "city": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "countryId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "county": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "ContactQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "CreditNoteDto": {
   "properties": {
    "externalReference": {
     "type": "string"
    },
    "attachments": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/AttachmentDto"
     }
    },
    "invoiceLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/CreditNoteLineDto"
     }
    },
    "hold": {
     "type": "boolean"
    },
    "detailTotal": {
     "type": "number",
     "format": "double"
    },
    "detailTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "salesPersonID": {
     "type": "integer",
     "format": "int32"
    },
    "salesPersonDescr": {
     "type": "string"
    },
    "customer": {
     "$ref": "#/definitions/CustomerNumberDto"
    },
    "documentType": {
     "type": "string",
     "enum": [
      "Invoice",
      "DebitNote",
      "CreditNote",
      "Payment",
      "VoidPayment",
      "Prepayment",
      "Refund",
      "FinCharge",
      "SmallBalanceWo",
      "SmallCreditWo",
      "CashSale",
      "CashReturn",
      "Undefined",
      "NoUpdate"
     ]
    },
    "referenceNumber": {
     "type": "string"
    },
    "postPeriod": {
     "type": "string"
    },
    "financialPeriod": {
     "type": "string"
    },
    "documentDate": {
     "type": "string",
     "format": "date-time"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Scheduled",
      "Open",
      "Closed",
      "PendingPrint",
      "PendingEmail",
      "CreditHold",
      "CcHold"
     ]
    },
    "currencyId": {
     "type": "string"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "balanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "cashDiscount": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "customerRefNumber": {
     "type": "string"
    },
    "invoiceText": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "createdDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "note": {
     "type": "string"
    },
    "vatTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    }
   },
   "description": "This class represents a invoice in InvoiceController. Used by getting data."
  },
  "AttachmentDto": {
   "properties": {
    "name": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "revision": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "CreditNoteLineDto": {
   "properties": {
    "attachments": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/AttachmentDto"
     }
    },
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryNumber": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "unitPrice": {
     "type": "number",
     "format": "double"
    },
    "unitPriceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "manualAmount": {
     "type": "number",
     "format": "double"
    },
    "manualAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "vatCode": {
     "$ref": "#/definitions/VatCodeDto"
    },
    "uom": {
     "type": "string"
    },
    "discountPercent": {
     "type": "number",
     "format": "double"
    },
    "discountAmount": {
     "type": "number",
     "format": "double"
    },
    "discountAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "manualDiscount": {
     "type": "boolean"
    },
    "subaccount": {
     "$ref": "#/definitions/SubAccountDto"
    },
    "salesperson": {
     "type": "string"
    },
    "deferralSchedule": {
     "type": "integer",
     "format": "int32"
    },
    "deferralCode": {
     "type": "string"
    },
    "discountCode": {
     "type": "string"
    },
    "note": {
     "type": "string"
    }
   }
  },
  "CreditNoteUpdateDto": {
   "properties": {
    "currencyId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customerRefNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "externalReference": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "invoiceLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/CreditNoteLineUpdateDto"
     }
    },
    "referenceNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customerNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "documentDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "postPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "financialPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "invoiceText": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "salesPersonID": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "CreditNoteLineUpdateDto": {
   "properties": {
    "discountCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "unitPriceInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "manualAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "accountNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatCodeId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "discountPercent": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "discountAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "manualDiscount": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "subaccount": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SegmentUpdateDto"
     }
    },
    "salesperson": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "deferralSchedule": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "deferralCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "ReleaseInvoiceActionResultDto": {
   "properties": {
    "actionId": {
     "type": "string",
     "format": "uuid"
    },
    "actionResult": {
     "type": "string",
     "enum": [
      "Queued",
      "InProcess",
      "Failed",
      "Done"
     ]
    },
    "errorInfo": {
     "type": "string"
    }
   }
  },
  "CustomerBalanceDto": {
   "properties": {
    "customer": {
     "$ref": "#/definitions/CustomerDescriptionDto"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "totalOrder": {
     "type": "number",
     "format": "double"
    },
    "totalLoan": {
     "type": "number",
     "format": "double"
    },
    "totalSalePeriod": {
     "type": "number",
     "format": "double"
    },
    "totalSaleYear": {
     "type": "number",
     "format": "double"
    },
    "totalDiscountPeriod": {
     "type": "number",
     "format": "double"
    },
    "totalDiscountYear": {
     "type": "number",
     "format": "double"
    },
    "lastModified": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "CustomerDescriptionDto": {
   "properties": {
    "internalId": {
     "type": "integer",
     "format": "int32"
    },
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "SalesOrderQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "SalesOrderDto": {
   "properties": {
    "project": {
     "type": "integer",
     "format": "int32"
    },
    "printDescriptionOnInvoice": {
     "type": "boolean"
    },
    "printNoteOnExternalDocuments": {
     "type": "boolean"
    },
    "printNoteOnInternalDocuments": {
     "type": "boolean"
    },
    "soBillingContact": {
     "$ref": "#/definitions/SalesOrderContactDto"
    },
    "soBillingAddress": {
     "$ref": "#/definitions/SalesOrderAddressDto"
    },
    "branch": {
     "$ref": "#/definitions/BranchNumberDto"
    },
    "customerVATZone": {
     "$ref": "#/definitions/VatZoneDto"
    },
    "invoiceSeparately": {
     "type": "boolean"
    },
    "invoiceNbr": {
     "type": "string"
    },
    "invoiceDate": {
     "type": "string",
     "format": "date-time"
    },
    "terms": {
     "$ref": "#/definitions/CreditTermsDto"
    },
    "dueDate": {
     "type": "string",
     "format": "date-time"
    },
    "cashDiscountDate": {
     "type": "string",
     "format": "date-time"
    },
    "postPeriod": {
     "type": "string"
    },
    "salesPerson": {
     "$ref": "#/definitions/SalesPersonDto"
    },
    "owner": {
     "$ref": "#/definitions/UserDescriptionDto"
    },
    "origOrderType": {
     "type": "string"
    },
    "origOrderNbr": {
     "type": "string"
    },
    "soShippingContact": {
     "$ref": "#/definitions/SalesOrderContactDto"
    },
    "soShippingAddress": {
     "$ref": "#/definitions/SalesOrderAddressDto"
    },
    "schedShipment": {
     "type": "string",
     "format": "date-time"
    },
    "shipSeparately": {
     "type": "boolean"
    },
    "shipComplete": {
     "type": "string",
     "enum": [
      "BackOrderAllowed",
      "CancelRemainder",
      "ShipComplete"
     ]
    },
    "cancelBy": {
     "type": "string",
     "format": "date-time"
    },
    "canceled": {
     "type": "boolean"
    },
    "preferredWarehouse": {
     "$ref": "#/definitions/WarehouseDto"
    },
    "shipVia": {
     "$ref": "#/definitions/CarrierDescriptionDto"
    },
    "fobPoint": {
     "$ref": "#/definitions/FOBPointDescriptionDto"
    },
    "priority": {
     "type": "integer",
     "format": "int32"
    },
    "shippingTerms": {
     "$ref": "#/definitions/ShippingTermsDescriptionDto"
    },
    "shippingZone": {
     "$ref": "#/definitions/ShippingZoneDescriptionDto"
    },
    "residentialDelivery": {
     "type": "boolean"
    },
    "saturdayDelivery": {
     "type": "boolean"
    },
    "insurance": {
     "type": "boolean"
    },
    "transactionType": {
     "$ref": "#/definitions/SigmaIntrastatTransactionDescriptionDto"
    },
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SalesOrderLineDto"
     }
    },
    "orderType": {
     "type": "string",
     "enum": [
      "CreditNote",
      "DebitNote",
      "Invoice",
      "QuoteOrder",
      "RMAOrder",
      "SalesOrder",
      "StandardOrder",
      "TransferOrder"
     ]
    },
    "orderNo": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Open",
      "Hold",
      "CreditHold",
      "Completed",
      "Cancelled",
      "BackOrder",
      "Shipping",
      "Invoiced"
     ]
    },
    "hold": {
     "type": "boolean"
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "requestOn": {
     "type": "string",
     "format": "date-time"
    },
    "customerOrder": {
     "type": "string"
    },
    "customerRefNo": {
     "type": "string"
    },
    "customer": {
     "$ref": "#/definitions/CustomerDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "currency": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "orderTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotal": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "taxTotal": {
     "type": "number",
     "format": "double"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
  },
  "SalesOrderContactDto": {
   "properties": {
    "overrideContact": {
     "type": "boolean"
    },
    "contactId": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    },
    "attention": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "web": {
     "type": "string"
    },
    "phone1": {
     "type": "string"
    },
    "phone2": {
     "type": "string"
    },
    "fax": {
     "type": "string"
    }
   }
  },
  "SalesOrderAddressDto": {
   "properties": {
    "overrideAddress": {
     "type": "boolean"
    },
    "addressId": {
     "type": "integer",
     "format": "int32"
    },
    "addressLine1": {
     "type": "string"
    },
    "addressLine2": {
     "type": "string"
    },
    "addressLine3": {
     "type": "string"
    },
    "postalCode": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "country": {
     "$ref": "#/definitions/CountryDto"
    },
    "county": {
     "$ref": "#/definitions/CountyDto"
    }
   }
  },
  "BranchNumberDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "SalesPersonDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "UserDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "WarehouseDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "CarrierDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "FOBPointDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ShippingTermsDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ShippingZoneDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "SigmaIntrastatTransactionDescriptionDto": {
   "properties": {
    "id": {
     "type": "integer",
     "format": "int32"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "SalesOrderLineDto": {
   "properties": {
    "branch": {
     "type": "integer",
     "format": "int32"
    },
    "invoiceNbr": {
     "type": "string"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Issue",
      "Receipt"
     ]
    },
    "freeItem": {
     "type": "boolean"
    },
    "requestedOn": {
     "type": "string",
     "format": "date-time"
    },
    "shipOn": {
     "type": "string",
     "format": "date-time"
    },
    "shipComplete": {
     "type": "string",
     "enum": [
      "BackOrderAllowed",
      "CancelRemainder",
      "ShipComplete"
     ]
    },
    "undershipThreshold": {
     "type": "number",
     "format": "double"
    },
    "overshipThreshold": {
     "type": "number",
     "format": "double"
    },
    "completed": {
     "type": "boolean"
    },
    "markForPO": {
     "type": "boolean"
    },
    "poSource": {
     "type": "string",
     "enum": [
      "DropShipToOrder",
      "Manufactured",
      "None",
      "Purchased",
      "PurchaseToOrder",
      "Transfer"
     ]
    },
    "lotSerialNbr": {
     "type": "string"
    },
    "expirationDate": {
     "type": "string",
     "format": "date-time"
    },
    "reasonCode": {
     "type": "string"
    },
    "salesPerson": {
     "$ref": "#/definitions/SalesPersonDto"
    },
    "taxCategory": {
     "type": "string"
    },
    "commissionable": {
     "type": "boolean"
    },
    "alternateID": {
     "type": "string"
    },
    "projectTask": {
     "type": "integer",
     "format": "int32"
    },
    "lineNbr": {
     "type": "integer",
     "format": "int32"
    },
    "inventory": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "uom": {
     "type": "string"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "qtyOnShipments": {
     "type": "number",
     "format": "double"
    },
    "openQty": {
     "type": "number",
     "format": "double"
    },
    "unitPrice": {
     "type": "number",
     "format": "double"
    },
    "discountCode": {
     "type": "string"
    },
    "discountPercent": {
     "type": "number",
     "format": "double"
    },
    "discountAmount": {
     "type": "number",
     "format": "double"
    },
    "manualDiscount": {
     "type": "boolean"
    },
    "discUnitPrice": {
     "type": "number",
     "format": "double"
    },
    "extPrice": {
     "type": "number",
     "format": "double"
    },
    "unbilledAmount": {
     "type": "number",
     "format": "double"
    },
    "lineDescription": {
     "type": "string"
    }
   }
  },
  "InventoryNumberDescriptionDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "WarehouseIdDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "SalesOrderBasicDto": {
   "properties": {
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SalesOrderDocumentLineDto"
     }
    },
    "orderType": {
     "type": "string",
     "enum": [
      "CreditNote",
      "DebitNote",
      "Invoice",
      "QuoteOrder",
      "RMAOrder",
      "SalesOrder",
      "StandardOrder",
      "TransferOrder"
     ]
    },
    "orderNo": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Open",
      "Hold",
      "CreditHold",
      "Completed",
      "Cancelled",
      "BackOrder",
      "Shipping",
      "Invoiced"
     ]
    },
    "hold": {
     "type": "boolean"
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "requestOn": {
     "type": "string",
     "format": "date-time"
    },
    "customerOrder": {
     "type": "string"
    },
    "customerRefNo": {
     "type": "string"
    },
    "customer": {
     "$ref": "#/definitions/CustomerDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "currency": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "orderTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotal": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "taxTotal": {
     "type": "number",
     "format": "double"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
  },
  "SalesOrderDocumentLineDto": {
   "properties": {
    "lineNbr": {
     "type": "integer",
     "format": "int32"
    },
    "inventory": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "uom": {
     "type": "string"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "qtyOnShipments": {
     "type": "number",
     "format": "double"
    },
    "openQty": {
     "type": "number",
     "format": "double"
    },
    "unitPrice": {
     "type": "number",
     "format": "double"
    },
    "discountCode": {
     "type": "string"
    },
    "discountPercent": {
     "type": "number",
     "format": "double"
    },
    "discountAmount": {
     "type": "number",
     "format": "double"
    },
    "manualDiscount": {
     "type": "boolean"
    },
    "discUnitPrice": {
     "type": "number",
     "format": "double"
    },
    "extPrice": {
     "type": "number",
     "format": "double"
    },
    "unbilledAmount": {
     "type": "number",
     "format": "double"
    },
    "lineDescription": {
     "type": "string"
    }
   },
   "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
  },
  "CustomerBalanceQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "CustomerDto": {
   "properties": {
    "internalId": {
     "type": "integer",
     "format": "int32"
    },
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Active",
      "OnHold",
      "CreditHold",
      "Inactive",
      "OneTime"
     ]
    },
    "mainAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "mainContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "accountReference": {
     "type": "string"
    },
    "parentRecord": {
     "$ref": "#/definitions/ParentRecordDto"
    },
    "customerClass": {
     "$ref": "#/definitions/ClassDescriptionDto"
    },
    "creditTerms": {
     "$ref": "#/definitions/CreditTermsDto"
    },
    "currencyId": {
     "type": "string"
    },
    "creditVerification": {
     "type": "string",
     "enum": [
      "Disabled",
      "DaysPastDue",
      "CreditLimit",
      "LimitAndDaysPastDue"
     ]
    },
    "creditLimit": {
     "type": "number",
     "format": "double"
    },
    "creditDaysPastDue": {
     "type": "integer",
     "format": "int32"
    },
    "invoiceAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "invoiceContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "printInvoices": {
     "type": "boolean"
    },
    "acceptAutoInvoices": {
     "type": "boolean"
    },
    "sendInvoicesByEmail": {
     "type": "boolean"
    },
    "printStatements": {
     "type": "boolean"
    },
    "sendStatementsByEmail": {
     "type": "boolean"
    },
    "printMultiCurrencyStatements": {
     "type": "boolean"
    },
    "statementType": {
     "type": "string",
     "enum": [
      "OpenItem",
      "BalanceBroughtForward"
     ]
    },
    "deliveryAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "deliveryContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "vatRegistrationId": {
     "type": "string"
    },
    "corporateId": {
     "type": "string"
    },
    "vatZone": {
     "$ref": "#/definitions/VatZoneDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "createdDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a customer in CustomerController. Used by getting data."
  },
  "ParentRecordDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "ClassDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "CustomerUpdateDto": {
   "properties": {
    "number": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "name": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "status": {
     "$ref": "#/definitions/DtoValue[CustomerStatus]"
    },
    "accountReference": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "parentRecordNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currencyId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "creditLimit": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "creditDaysPastDue": {
     "$ref": "#/definitions/DtoValue[Nullable[Int16]]"
    },
    "overrideWithClassValues": {
     "type": "boolean"
    },
    "customerClassId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "creditTermsId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "printInvoices": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "acceptAutoInvoices": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "sendInvoicesByEmail": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "printStatements": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "sendStatementsByEmail": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "printMultiCurrencyStatements": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "vatRegistrationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "corporateId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatZoneId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "mainAddress": {
     "$ref": "#/definitions/DtoValue[AddressUpdateDto]"
    },
    "mainContact": {
     "$ref": "#/definitions/DtoValue[ContactInfoUpdateDto]"
    },
    "creditVerification": {
     "$ref": "#/definitions/DtoValue[CreditRule]"
    },
    "invoiceAddress": {
     "$ref": "#/definitions/DtoValue[AddressUpdateDto]"
    },
    "invoiceContact": {
     "$ref": "#/definitions/DtoValue[ContactInfoUpdateDto]"
    },
    "statementType": {
     "$ref": "#/definitions/DtoValue[StatementTypes]"
    },
    "deliveryAddress": {
     "$ref": "#/definitions/DtoValue[AddressUpdateDto]"
    },
    "deliveryContact": {
     "$ref": "#/definitions/DtoValue[ContactInfoUpdateDto]"
    }
   }
  },
  "DtoValue[CustomerStatus]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Active",
      "OnHold",
      "CreditHold",
      "Inactive",
      "OneTime"
     ]
    }
   }
  },
  "DtoValue[Nullable[Int16]]": {
   "properties": {
    "value": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "DtoValue[ContactInfoUpdateDto]": {
   "properties": {
    "value": {
     "$ref": "#/definitions/ContactInfoUpdateDto"
    }
   }
  },
  "DtoValue[CreditRule]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Disabled",
      "DaysPastDue",
      "CreditLimit",
      "LimitAndDaysPastDue"
     ]
    }
   }
  },
  "DtoValue[StatementTypes]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "OpenItem",
      "BalanceBroughtForward"
     ]
    }
   }
  },
  "ContactInfoUpdateDto": {
   "properties": {
    "name": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "attention": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "email": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "web": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone2": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "fax": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "CustomerQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Active",
      "OnHold",
      "CreditHold",
      "Inactive",
      "OneTime"
     ]
    },
    "corporateId": {
     "type": "string"
    },
    "vatRegistrationId": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    },
    "createdDateTime": {
     "type": "string"
    },
    "createdDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "CustomerInvoiceDto": {
   "properties": {
    "creditTerms": {
     "$ref": "#/definitions/CreditTermsDto"
    },
    "documentDueDate": {
     "type": "string",
     "format": "date-time"
    },
    "cashDiscountDate": {
     "type": "string",
     "format": "date-time"
    },
    "externalReference": {
     "type": "string"
    },
    "attachments": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/AttachmentDto"
     }
    },
    "invoiceLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/CustomerInvoiceLineDto"
     }
    },
    "hold": {
     "type": "boolean"
    },
    "detailTotal": {
     "type": "number",
     "format": "double"
    },
    "detailTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "salesPersonID": {
     "type": "integer",
     "format": "int32"
    },
    "salesPersonDescr": {
     "type": "string"
    },
    "customer": {
     "$ref": "#/definitions/CustomerNumberDto"
    },
    "documentType": {
     "type": "string",
     "enum": [
      "Invoice",
      "DebitNote",
      "CreditNote",
      "Payment",
      "VoidPayment",
      "Prepayment",
      "Refund",
      "FinCharge",
      "SmallBalanceWo",
      "SmallCreditWo",
      "CashSale",
      "CashReturn",
      "Undefined",
      "NoUpdate"
     ]
    },
    "referenceNumber": {
     "type": "string"
    },
    "postPeriod": {
     "type": "string"
    },
    "financialPeriod": {
     "type": "string"
    },
    "documentDate": {
     "type": "string",
     "format": "date-time"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Scheduled",
      "Open",
      "Closed",
      "PendingPrint",
      "PendingEmail",
      "CreditHold",
      "CcHold"
     ]
    },
    "currencyId": {
     "type": "string"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "balanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "cashDiscount": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "customerRefNumber": {
     "type": "string"
    },
    "invoiceText": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "createdDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "note": {
     "type": "string"
    },
    "vatTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    }
   },
   "description": "This class represents a invoice in InvoiceController. Used by getting data."
  },
  "CustomerInvoiceLineDto": {
   "properties": {
    "termStartDate": {
     "type": "string",
     "format": "date-time"
    },
    "termEndDate": {
     "type": "string",
     "format": "date-time"
    },
    "attachments": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/AttachmentDto"
     }
    },
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryNumber": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "unitPrice": {
     "type": "number",
     "format": "double"
    },
    "unitPriceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "manualAmount": {
     "type": "number",
     "format": "double"
    },
    "manualAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "vatCode": {
     "$ref": "#/definitions/VatCodeDto"
    },
    "uom": {
     "type": "string"
    },
    "discountPercent": {
     "type": "number",
     "format": "double"
    },
    "discountAmount": {
     "type": "number",
     "format": "double"
    },
    "discountAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "manualDiscount": {
     "type": "boolean"
    },
    "subaccount": {
     "$ref": "#/definitions/SubAccountDto"
    },
    "salesperson": {
     "type": "string"
    },
    "deferralSchedule": {
     "type": "integer",
     "format": "int32"
    },
    "deferralCode": {
     "type": "string"
    },
    "discountCode": {
     "type": "string"
    },
    "note": {
     "type": "string"
    }
   }
  },
  "CustomerDocumentDto": {
   "properties": {
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "subaccount": {
     "$ref": "#/definitions/SubAccountDto"
    },
    "branch": {
     "$ref": "#/definitions/BranchNumberDto"
    },
    "documentDueDate": {
     "type": "string",
     "format": "date-time"
    },
    "customer": {
     "$ref": "#/definitions/CustomerNumberDto"
    },
    "documentType": {
     "type": "string",
     "enum": [
      "Invoice",
      "DebitNote",
      "CreditNote",
      "Payment",
      "VoidPayment",
      "Prepayment",
      "Refund",
      "FinCharge",
      "SmallBalanceWo",
      "SmallCreditWo",
      "CashSale",
      "CashReturn",
      "Undefined",
      "NoUpdate"
     ]
    },
    "referenceNumber": {
     "type": "string"
    },
    "postPeriod": {
     "type": "string"
    },
    "financialPeriod": {
     "type": "string"
    },
    "documentDate": {
     "type": "string",
     "format": "date-time"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Scheduled",
      "Open",
      "Closed",
      "PendingPrint",
      "PendingEmail",
      "CreditHold",
      "CcHold"
     ]
    },
    "currencyId": {
     "type": "string"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "balanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "cashDiscount": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "customerRefNumber": {
     "type": "string"
    },
    "invoiceText": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "createdDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "note": {
     "type": "string"
    },
    "vatTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    }
   }
  },
  "CustomerInvoiceUpdateDto": {
   "properties": {
    "paymentMethodId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "creditTermsId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currencyId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customerRefNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "cashDiscountDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "documentDueDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "externalReference": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "exchangeRate": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "invoiceLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/CustomerInvoiceLinesUpdateDto"
     }
    },
    "referenceNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customerNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "documentDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "postPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "financialPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "invoiceText": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "salesPersonID": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "CustomerInvoiceLinesUpdateDto": {
   "properties": {
    "discountCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "termStartDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "termEndDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "unitPriceInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "manualAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "accountNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatCodeId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "discountPercent": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "discountAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "manualDiscount": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "subaccount": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SegmentUpdateDto"
     }
    },
    "salesperson": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "deferralSchedule": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "deferralCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "ReverseInvoiceActionDto": {
   "properties": {
    "returnCreditNote": {
     "type": "boolean"
    }
   }
  },
  "ReverseInvoiceActionResultDto": {
   "properties": {
    "referenceNumber": {
     "type": "string"
    },
    "creditNoteDto": {
     "$ref": "#/definitions/CreditNoteDto"
    },
    "actionId": {
     "type": "string",
     "format": "uuid"
    },
    "actionResult": {
     "type": "string",
     "enum": [
      "Queued",
      "InProcess",
      "Failed",
      "Done"
     ]
    },
    "errorInfo": {
     "type": "string"
    }
   }
  },
  "DimensionQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "DtoDimension": {
   "properties": {
    "id": {
     "type": "string"
    },
    "length": {
     "type": "integer",
     "format": "int32"
    },
    "description": {
     "type": "string"
    },
    "segments": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/DtoSegment"
     }
    }
   }
  },
  "DtoSegment": {
   "properties": {
    "segmentId": {
     "type": "integer",
     "format": "int32"
    },
    "description": {
     "type": "string"
    },
    "length": {
     "type": "integer",
     "format": "int32"
    },
    "publicId": {
     "type": "string"
    },
    "timeStamp": {
     "type": "string"
    },
    "lastModified": {
     "type": "string",
     "format": "date-time"
    },
    "validate": {
     "type": "boolean"
    },
    "segmentValues": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/DtoSegmentValue"
     }
    }
   }
  },
  "DtoSegmentValue": {
   "properties": {
    "valueId": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "publicId": {
     "type": "string"
    },
    "active": {
     "type": "boolean"
    },
    "timeStamp": {
     "type": "string"
    },
    "lastModified": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "DtoSegmentUpdate": {
   "properties": {
    "dimensionId": {
     "type": "string"
    },
    "segementId": {
     "type": "integer",
     "format": "int32"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "publicId": {
     "$ref": "#/definitions/DtoValue[Nullable[Guid]]"
    },
    "segmentValues": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/DtoSegmentValueUpdate"
     }
    }
   }
  },
  "DtoValue[Nullable[Guid]]": {
   "properties": {
    "value": {
     "type": "string"
    }
   }
  },
  "DtoSegmentValueUpdate": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "value": {
     "type": "string"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "active": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "publicId": {
     "$ref": "#/definitions/DtoValue[Nullable[Guid]]"
    }
   }
  },
  "EmployeeDto": {
   "properties": {
    "employeeId": {
     "type": "integer",
     "format": "int32"
    },
    "employeeNumber": {
     "type": "string"
    },
    "employeeName": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Active",
      "OnHold",
      "HoldPayments",
      "Inactive",
      "OneTime"
     ]
    },
    "contact": {
     "$ref": "#/definitions/EmployeeContactDto"
    },
    "address": {
     "$ref": "#/definitions/AddressDto"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents an Employee in EmployeeController. Used for getting data."
  },
  "EmployeeContactDto": {
   "properties": {
    "employeeContact": {
     "type": "string"
    },
    "title": {
     "type": "string",
     "enum": [
      "Doctor",
      "Miss",
      "Mr",
      "Mrs",
      "Ms",
      "Prof"
     ]
    },
    "firstName": {
     "type": "string"
    },
    "midName": {
     "type": "string"
    },
    "lastName": {
     "type": "string"
    },
    "phone3": {
     "type": "string"
    },
    "contactId": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    },
    "attention": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "web": {
     "type": "string"
    },
    "phone1": {
     "type": "string"
    },
    "phone2": {
     "type": "string"
    },
    "fax": {
     "type": "string"
    }
   }
  },
  "EmployeeQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "FinancialPeriodQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    }
   }
  },
  "FinancialPeriodDto": {
   "properties": {
    "year": {
     "type": "integer",
     "format": "int32"
    },
    "period": {
     "type": "string"
    },
    "startDate": {
     "type": "string",
     "format": "date-time"
    },
    "endDate": {
     "type": "string",
     "format": "date-time"
    },
    "description": {
     "type": "string"
    },
    "active": {
     "type": "boolean"
    },
    "closedInSupplierLedger": {
     "type": "boolean"
    },
    "closedInCustomerLedger": {
     "type": "boolean"
    },
    "closedInInventoryManagement": {
     "type": "boolean"
    },
    "closedInGeneralLedger": {
     "type": "boolean"
    },
    "closedInCashManagement": {
     "type": "boolean"
    },
    "closedInFixedAssets": {
     "type": "boolean"
    }
   },
   "description": "This class represents a Financial Period in FinancialPeriodController. Used by getting data."
  },
  "GeneralLedgerBalanceQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "periodId": {
     "type": "string"
    },
    "periodIdCondition": {
     "type": "string"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    },
    "accountId": {
     "type": "string"
    },
    "yearClosed": {
     "type": "integer",
     "format": "int32"
    },
    "balanceType": {
     "type": "string",
     "enum": [
      "Actual",
      "Report",
      "Statistical",
      "Budget"
     ]
    }
   }
  },
  "GeneralLedgerBalanceDto": {
   "properties": {
    "branch": {
     "$ref": "#/definitions/BranchNumberDto"
    },
    "ledger": {
     "$ref": "#/definitions/LedgerDescriptionDto"
    },
    "balanceType": {
     "type": "string",
     "enum": [
      "Actual",
      "Report",
      "Statistical",
      "Budget"
     ]
    },
    "financialPeriod": {
     "type": "string"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "subaccountId": {
     "type": "integer",
     "format": "int32"
    },
    "currencyId": {
     "type": "string"
    },
    "periodToDateDebit": {
     "type": "number",
     "format": "double"
    },
    "periodToDateCredit": {
     "type": "number",
     "format": "double"
    },
    "beginningBalance": {
     "type": "number",
     "format": "double"
    },
    "yearToDateBalance": {
     "type": "number",
     "format": "double"
    },
    "periodToDateDebitInCurrency": {
     "type": "number",
     "format": "double"
    },
    "periodToDateCreditInCurrency": {
     "type": "number",
     "format": "double"
    },
    "beginningBalanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "yearToDateBalanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "yearClosed": {
     "type": "boolean"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a General Ledger Balance in GeneralLedgerBalanceController. Used by getting data."
  },
  "LedgerDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "GeneralLedgerTransactionsQueryParameters": {
   "properties": {
    "branch": {
     "type": "string"
    },
    "ledger": {
     "type": "string"
    },
    "fromPeriod": {
     "type": "string"
    },
    "toPeriod": {
     "type": "string"
    },
    "account": {
     "type": "string"
    },
    "subaccountId": {
     "type": "string"
    },
    "fromDate": {
     "type": "string"
    },
    "toDate": {
     "type": "string"
    },
    "includeUnposted": {
     "type": "boolean"
    },
    "includeUnreleased": {
     "type": "boolean"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "GeneralLedgerTransactionDetailsDto": {
   "properties": {
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "module": {
     "type": "string"
    },
    "batchNumber": {
     "type": "string"
    },
    "tranDate": {
     "type": "string",
     "format": "date-time"
    },
    "period": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "refNumber": {
     "type": "string"
    },
    "branch": {
     "$ref": "#/definitions/BranchNumberDto"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "ledger": {
     "$ref": "#/definitions/LedgerDescriptionDto"
    },
    "subaccount": {
     "type": "string"
    },
    "begBalance": {
     "type": "number",
     "format": "double"
    },
    "debitAmount": {
     "type": "number",
     "format": "double"
    },
    "creditAmount": {
     "type": "number",
     "format": "double"
    },
    "endingBalance": {
     "type": "number",
     "format": "double"
    },
    "currency": {
     "type": "string"
    },
    "currBegBalance": {
     "type": "number",
     "format": "double"
    },
    "currDebitAmount": {
     "type": "number",
     "format": "double"
    },
    "currCreditAmount": {
     "type": "number",
     "format": "double"
    },
    "currEndingBalance": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "InventoryDto": {
   "properties": {
    "inventoryId": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryNumber": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Active",
      "NoSales",
      "NoPurchases",
      "NoRequest",
      "Inactive",
      "MarkedForDeletion"
     ]
    },
    "type": {
     "type": "string",
     "enum": [
      "NonStockItem",
      "LaborItem",
      "ServiceItem",
      "ChargeItem",
      "ExpenseItem",
      "FinishedGoodItem",
      "ComponentPartItem",
      "SubassemblyItem"
     ]
    },
    "description": {
     "type": "string"
    },
    "itemClass": {
     "$ref": "#/definitions/ItemClassDto"
    },
    "postingClass": {
     "$ref": "#/definitions/PostingClassDto"
    },
    "vatCode": {
     "$ref": "#/definitions/VatCodeDto"
    },
    "defaultPrice": {
     "type": "number",
     "format": "double"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "crossReferences": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/InventoryCrossReferenceDto"
     }
    }
   }
  },
  "ItemClassDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "PostingClassDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "InventoryCrossReferenceDto": {
   "properties": {
    "alternateType": {
     "type": "string",
     "enum": [
      "CPN",
      "VPN",
      "Global",
      "Barcode"
     ]
    },
    "bAccount": {
     "$ref": "#/definitions/BAccountDescriptionDto"
    },
    "alternateID": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "BAccountDescriptionDto": {
   "properties": {
    "internalId": {
     "type": "integer",
     "format": "int32"
    },
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "InventoryQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    },
    "alternateID": {
     "type": "string"
    }
   }
  },
  "InventoryUpdateDto": {
   "properties": {
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "status": {
     "$ref": "#/definitions/DtoValue[InventoryStatus]"
    },
    "type": {
     "$ref": "#/definitions/DtoValue[InventoryType]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "itemClass": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "postingClass": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "defaultPrice": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    }
   },
   "description": "This class represents a Inventory in InventoryController. Used to create and update Inventory Items."
  },
  "DtoValue[InventoryStatus]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Active",
      "NoSales",
      "NoPurchases",
      "NoRequest",
      "Inactive",
      "MarkedForDeletion"
     ]
    }
   }
  },
  "DtoValue[InventoryType]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "NonStockItem",
      "LaborItem",
      "ServiceItem",
      "ChargeItem",
      "ExpenseItem",
      "FinishedGoodItem",
      "ComponentPartItem",
      "SubassemblyItem"
     ]
    }
   }
  },
  "DtoValue[Nullable[Decimal]]": {
   "properties": {
    "value": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "InventoryAdjustmentDto": {
   "properties": {
    "totalCost": {
     "type": "number",
     "format": "double",
     "description": "The total cost of the inventory items received. The system automatically calculates this value as a sum of all extended cost values of all received inventory items listed in the Transaction Details tab of this form."
    },
    "controlCost": {
     "type": "number",
     "format": "double",
     "description": "The total cost of the inventory items to be received. Control Cost is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. The user enters this value manually to confirm the total cost as calculated automatically for the document. If the Control Cost and Total Cost values do not match, the system generates a warning message and the document cannot be saved."
    },
    "adjusmentLines": {
     "type": "array",
     "description": "The inventory adjusment lines",
     "items": {
      "$ref": "#/definitions/InventoryAdjustmentLineDto"
     }
    },
    "referenceNumber": {
     "type": "string",
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form."
    },
    "status": {
     "type": "string",
     "description": "The current status of the receipt. The following options are available: \r\n            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r\n            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r\n            Released: The receipt/issue has been released and cannot be edited or deleted.",
     "enum": [
      "Hold",
      "Balanced",
      "Released"
     ]
    },
    "hold": {
     "type": "boolean",
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status."
    },
    "date": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date."
    },
    "postPeriod": {
     "type": "string",
     "description": "The financial period to which the transactions recorded in the document should be posted."
    },
    "externalReference": {
     "type": "string",
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code)."
    },
    "description": {
     "type": "string",
     "description": "A brief description of the inventory issue or its transactions."
    },
    "totalQuantity": {
     "type": "number",
     "format": "double",
     "description": "The total quantity of inventory items, which the system calculates automatically, for the document."
    },
    "controlQuantity": {
     "type": "number",
     "format": "double",
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved."
    },
    "batchNumber": {
     "type": "string",
     "description": "The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions."
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the document was last modified."
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryAdjustmentLineDto": {
   "properties": {
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "unitCost": {
     "type": "number",
     "format": "double"
    },
    "extCost": {
     "type": "number",
     "format": "double"
    },
    "receiptNumber": {
     "type": "string"
    },
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryItem": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "uom": {
     "type": "string"
    },
    "reasonCode": {
     "$ref": "#/definitions/ReasonCodeDto"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ReasonCodeDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "InventoryDocumentQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "InventoryAdjustmentUpdateDto": {
   "properties": {
    "controlCost": {
     "description": "The manually entered summary cost for all specified inventory adjustment items.",
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "adjustmentLines": {
     "type": "array",
     "description": "The inventory adjustment lines",
     "items": {
      "$ref": "#/definitions/InventoryAdjustmentLineUpdateDto"
     }
    },
    "referenceNumber": {
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.",
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "date": {
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date.",
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "postPeriod": {
     "description": "The financial period to which the transactions recorded in the document should be posted.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "externalReference": {
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code).",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "description": "A brief description of the inventory issue or its transactions.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "controlQuantity": {
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.",
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryAdjustmentLineUpdateDto": {
   "properties": {
    "warehouseId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "unitCost": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "extCost": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "receiptNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "reasonCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "DtoValue[Nullable[Boolean]]": {
   "properties": {
    "value": {
     "type": "boolean"
    }
   }
  },
  "DtoValue[Nullable[DateTime]]": {
   "properties": {
    "value": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "ReleaseInventoryDocumentActionResultDto": {
   "properties": {
    "actionId": {
     "type": "string",
     "format": "uuid"
    },
    "actionResult": {
     "type": "string",
     "enum": [
      "Queued",
      "InProcess",
      "Failed",
      "Done"
     ]
    },
    "errorInfo": {
     "type": "string"
    }
   }
  },
  "InventoryIssueDto": {
   "properties": {
    "totalAmount": {
     "type": "number",
     "format": "double",
     "description": "The total amount, calculated as a sum of amounts for all inventory issue operations included in this issue document."
    },
    "controlAmount": {
     "type": "number",
     "format": "double",
     "description": "The manually entered summary amount for all specified inventory items. Control Amount is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Amount and Total Amount values do not match, the system generates a warning message and the issue cannot be saved."
    },
    "issueLines": {
     "type": "array",
     "description": "The inventory issue lines",
     "items": {
      "$ref": "#/definitions/InventoryIssueLineDto"
     }
    },
    "referenceNumber": {
     "type": "string",
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form."
    },
    "status": {
     "type": "string",
     "description": "The current status of the receipt. The following options are available: \r\n            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r\n            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r\n            Released: The receipt/issue has been released and cannot be edited or deleted.",
     "enum": [
      "Hold",
      "Balanced",
      "Released"
     ]
    },
    "hold": {
     "type": "boolean",
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status."
    },
    "date": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date."
    },
    "postPeriod": {
     "type": "string",
     "description": "The financial period to which the transactions recorded in the document should be posted."
    },
    "externalReference": {
     "type": "string",
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code)."
    },
    "description": {
     "type": "string",
     "description": "A brief description of the inventory issue or its transactions."
    },
    "totalQuantity": {
     "type": "number",
     "format": "double",
     "description": "The total quantity of inventory items, which the system calculates automatically, for the document."
    },
    "controlQuantity": {
     "type": "number",
     "format": "double",
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved."
    },
    "batchNumber": {
     "type": "string",
     "description": "The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions."
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the document was last modified."
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryIssueLineDto": {
   "properties": {
    "transactionType": {
     "type": "string",
     "enum": [
      "Issue",
      "Return",
      "Invoice",
      "DebitNote",
      "CreditNote"
     ]
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "unitCost": {
     "type": "number",
     "format": "double"
    },
    "extCost": {
     "type": "number",
     "format": "double"
    },
    "unitPrice": {
     "type": "number",
     "format": "double"
    },
    "extPrice": {
     "type": "number",
     "format": "double"
    },
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryItem": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "uom": {
     "type": "string"
    },
    "reasonCode": {
     "$ref": "#/definitions/ReasonCodeDto"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "InventoryIssueUpdateDto": {
   "properties": {
    "controlAmount": {
     "description": "The manually entered summary amount for all specified inventory items. Control Amount is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Amount and Total Amount values do not match, the system generates a warning message and the issue cannot be saved.",
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "issueLines": {
     "type": "array",
     "description": "The inventory issue lines",
     "items": {
      "$ref": "#/definitions/InventoryIssueLineUpdateDto"
     }
    },
    "referenceNumber": {
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.",
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "date": {
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date.",
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "postPeriod": {
     "description": "The financial period to which the transactions recorded in the document should be posted.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "externalReference": {
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code).",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "description": "A brief description of the inventory issue or its transactions.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "controlQuantity": {
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.",
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryIssueLineUpdateDto": {
   "properties": {
    "warehouseId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "unitCost": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "extCost": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "unitPrice": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "extPrice": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "tranType": {
     "$ref": "#/definitions/DtoValue[Nullable[InventoryTransactionType]]"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "reasonCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "DtoValue[Nullable[InventoryTransactionType]]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Issue",
      "Return",
      "Invoice",
      "DebitNote",
      "CreditNote"
     ]
    }
   }
  },
  "InventoryReceiptDto": {
   "properties": {
    "totalCost": {
     "type": "number",
     "format": "double",
     "description": "The total cost of the inventory items received. The system automatically calculates this value as a sum of all extended cost values of all received inventory items listed in the Transaction Details tab of this form."
    },
    "controlCost": {
     "type": "number",
     "format": "double",
     "description": "The total cost of the inventory items to be received. Control Cost is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. The user enters this value manually to confirm the total cost as calculated automatically for the document. If the Control Cost and Total Cost values do not match, the system generates a warning message and the document cannot be saved."
    },
    "transferNumber": {
     "type": "string",
     "description": "The transfer number for the receipt operation. (Enter this number only if the two-step transfer operation is performed.)"
    },
    "receiptLines": {
     "type": "array",
     "description": "The inventory receipt lines",
     "items": {
      "$ref": "#/definitions/InventoryReceiptLineDto"
     }
    },
    "referenceNumber": {
     "type": "string",
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form."
    },
    "status": {
     "type": "string",
     "description": "The current status of the receipt. The following options are available: \r\n            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r\n            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r\n            Released: The receipt/issue has been released and cannot be edited or deleted.",
     "enum": [
      "Hold",
      "Balanced",
      "Released"
     ]
    },
    "hold": {
     "type": "boolean",
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status."
    },
    "date": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date."
    },
    "postPeriod": {
     "type": "string",
     "description": "The financial period to which the transactions recorded in the document should be posted."
    },
    "externalReference": {
     "type": "string",
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code)."
    },
    "description": {
     "type": "string",
     "description": "A brief description of the inventory issue or its transactions."
    },
    "totalQuantity": {
     "type": "number",
     "format": "double",
     "description": "The total quantity of inventory items, which the system calculates automatically, for the document."
    },
    "controlQuantity": {
     "type": "number",
     "format": "double",
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved."
    },
    "batchNumber": {
     "type": "string",
     "description": "The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions."
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the document was last modified."
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryReceiptLineDto": {
   "properties": {
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "unitCost": {
     "type": "number",
     "format": "double"
    },
    "extCost": {
     "type": "number",
     "format": "double"
    },
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryItem": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "uom": {
     "type": "string"
    },
    "reasonCode": {
     "$ref": "#/definitions/ReasonCodeDto"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "InventoryReceiptUpdateDto": {
   "properties": {
    "transferNumber": {
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "controlCost": {
     "description": "The manually entered summary amount for all specified inventory receipt items.",
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "receiptLines": {
     "type": "array",
     "description": "The inventory issue lines",
     "items": {
      "$ref": "#/definitions/InventoryReceiptLineUpdateDto"
     }
    },
    "referenceNumber": {
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.",
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "date": {
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date.",
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "postPeriod": {
     "description": "The financial period to which the transactions recorded in the document should be posted.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "externalReference": {
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code).",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "description": "A brief description of the inventory issue or its transactions.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "controlQuantity": {
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.",
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryReceiptLineUpdateDto": {
   "properties": {
    "warehouseId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "unitCost": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "extCost": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "reasonCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "InventorySummaryQueryParameters": {
   "properties": {
    "warehouse": {
     "type": "string"
    },
    "location": {
     "type": "string"
    }
   }
  },
  "InventorySummaryDto": {
   "properties": {
    "inventory": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationIdNameDto"
    },
    "available": {
     "type": "number",
     "format": "double"
    },
    "availableForShipment": {
     "type": "number",
     "format": "double"
    },
    "notAvailable": {
     "type": "number",
     "format": "double"
    },
    "soBooked": {
     "type": "number",
     "format": "double"
    },
    "soAllocated": {
     "type": "number",
     "format": "double"
    },
    "soShipped": {
     "type": "number",
     "format": "double"
    },
    "soBackOrdered": {
     "type": "number",
     "format": "double"
    },
    "inIssues": {
     "type": "number",
     "format": "double"
    },
    "inReceipts": {
     "type": "number",
     "format": "double"
    },
    "inTransit": {
     "type": "number",
     "format": "double"
    },
    "inAssemblyDemand": {
     "type": "number",
     "format": "double"
    },
    "inAssemblySupply": {
     "type": "number",
     "format": "double"
    },
    "purchasePrepared": {
     "type": "number",
     "format": "double"
    },
    "purchaseOrders": {
     "type": "number",
     "format": "double"
    },
    "poReceipts": {
     "type": "number",
     "format": "double"
    },
    "expired": {
     "type": "number",
     "format": "double"
    },
    "onHand": {
     "type": "number",
     "format": "double"
    },
    "soToPurchase": {
     "type": "number",
     "format": "double"
    },
    "purchaseForSO": {
     "type": "number",
     "format": "double"
    },
    "purchaseForSOPrepared": {
     "type": "number",
     "format": "double"
    },
    "purchaseForSOReceipts": {
     "type": "number",
     "format": "double"
    },
    "soToDropShip": {
     "type": "number",
     "format": "double"
    },
    "dropShipForSO": {
     "type": "number",
     "format": "double"
    },
    "dropShipForSOPrepared": {
     "type": "number",
     "format": "double"
    },
    "dropShipForSOReceipts": {
     "type": "number",
     "format": "double"
    },
    "baseUnit": {
     "type": "string"
    },
    "estimatedUnitCost": {
     "type": "number",
     "format": "double"
    },
    "estimatedTotalCost": {
     "type": "number",
     "format": "double"
    }
   },
   "description": "This class represents a InventorySummary in InventorySummaryController. Used by getting data."
  },
  "LocationIdNameDto": {
   "properties": {
    "id": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "InventoryTransferDto": {
   "properties": {
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "toWarehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "transferLines": {
     "type": "array",
     "description": "The inventory transfer lines",
     "items": {
      "$ref": "#/definitions/InventoryTransferLineDto"
     }
    },
    "referenceNumber": {
     "type": "string",
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form."
    },
    "status": {
     "type": "string",
     "description": "The current status of the receipt. The following options are available: \r\n            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r\n            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r\n            Released: The receipt/issue has been released and cannot be edited or deleted.",
     "enum": [
      "Hold",
      "Balanced",
      "Released"
     ]
    },
    "hold": {
     "type": "boolean",
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status."
    },
    "date": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date."
    },
    "postPeriod": {
     "type": "string",
     "description": "The financial period to which the transactions recorded in the document should be posted."
    },
    "externalReference": {
     "type": "string",
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code)."
    },
    "description": {
     "type": "string",
     "description": "A brief description of the inventory issue or its transactions."
    },
    "totalQuantity": {
     "type": "number",
     "format": "double",
     "description": "The total quantity of inventory items, which the system calculates automatically, for the document."
    },
    "controlQuantity": {
     "type": "number",
     "format": "double",
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved."
    },
    "batchNumber": {
     "type": "string",
     "description": "The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions."
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time",
     "description": "The date when the document was last modified."
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryTransferLineDto": {
   "properties": {
    "toLocation": {
     "$ref": "#/definitions/LocationDto"
    },
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryItem": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "uom": {
     "type": "string"
    },
    "reasonCode": {
     "$ref": "#/definitions/ReasonCodeDto"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "InventoryTransferUpdateDto": {
   "properties": {
    "warehouseId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "toWarehouseId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "transferLines": {
     "type": "array",
     "description": "The inventory issue lines",
     "items": {
      "$ref": "#/definitions/InventoryTransferLineUpdateDto"
     }
    },
    "referenceNumber": {
     "description": "The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "description": "A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.",
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "date": {
     "description": "The date when the receipt was created. All transactions included in this document will have this transaction date.",
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "postPeriod": {
     "description": "The financial period to which the transactions recorded in the document should be posted.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "externalReference": {
     "description": "The external reference number of the inventory issue document (for example, the vendor’s reference code).",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "description": "A brief description of the inventory issue or its transactions.",
     "$ref": "#/definitions/DtoValue[String]"
    },
    "controlQuantity": {
     "description": "The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.",
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    }
   },
   "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
  },
  "InventoryTransferLineUpdateDto": {
   "properties": {
    "toLocationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "reasonCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "JournalTransactionDto": {
   "properties": {
    "module": {
     "type": "string",
     "enum": [
      "ModuleGL",
      "ModuleAP",
      "ModuleAR",
      "ModuleCA",
      "ModuleCM",
      "ModuleIN",
      "ModuleSO",
      "ModulePO",
      "ModuleDR",
      "ModuleFA",
      "ModuleEP",
      "ModulePM",
      "ModuleTX",
      "ModuleCR"
     ]
    },
    "batchNumber": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Unposted",
      "Posted",
      "Completed",
      "Voided",
      "Released",
      "PartiallyReleased",
      "Scheduled"
     ]
    },
    "hold": {
     "type": "boolean"
    },
    "transactionDate": {
     "type": "string",
     "format": "date-time"
    },
    "postPeriod": {
     "type": "string"
    },
    "financialPeriod": {
     "type": "string"
    },
    "ledger": {
     "type": "string"
    },
    "ledgerDescription": {
     "type": "string"
    },
    "currencyId": {
     "type": "string"
    },
    "autoReversing": {
     "type": "boolean"
    },
    "reversingEntry": {
     "type": "boolean"
    },
    "description": {
     "type": "string"
    },
    "originalBatchNumber": {
     "type": "string"
    },
    "debitTotal": {
     "type": "number",
     "format": "double"
    },
    "debitTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "creditTotal": {
     "type": "number",
     "format": "double"
    },
    "creditTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "controlTotal": {
     "type": "number",
     "format": "double"
    },
    "controlTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "createVatTransaction": {
     "type": "boolean"
    },
    "skipVatAmountValidation": {
     "type": "boolean"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "transactionCode": {
     "type": "string"
    },
    "transactionCodeDescription": {
     "type": "string"
    },
    "journalTransactionLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/JournalTransactionLineDto"
     }
    }
   },
   "description": "This class represents a journal transaction in JournalTransactionController. Used by getting data."
  },
  "JournalTransactionLineDto": {
   "properties": {
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "accountNumber": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "subaccount": {
     "$ref": "#/definitions/SubAccountDto"
    },
    "referenceNumber": {
     "type": "string"
    },
    "debitAmount": {
     "type": "number",
     "format": "double"
    },
    "debitAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "creditAmount": {
     "type": "number",
     "format": "double"
    },
    "creditAmountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "transactionDescription": {
     "type": "string"
    },
    "vatCode": {
     "$ref": "#/definitions/VatCodeDto"
    },
    "vat": {
     "$ref": "#/definitions/VatDto"
    }
   }
  },
  "VatDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "JournalTransactionUpdateDto": {
   "properties": {
    "batchNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "transactionDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "postPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "financialPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "ledger": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currencyId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "autoReversing": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "controlTotalInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "createVatTransaction": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "skipVatAmountValidation": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "transactionCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "journalTransactionLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/JournalTransactionLineUpdateDto"
     }
    }
   },
   "description": "This class represents a journal transaction in JournalTransactionController. Used for creating/updating data."
  },
  "JournalTransactionLineUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "accountNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "subaccount": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SegmentUpdateDto"
     }
    },
    "referenceNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "transactionDescription": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "debitAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "creditAmountInCurrency": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "vatCodeId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatId": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "JournalTransactionQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "LedgerQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "LedgerDto": {
   "properties": {
    "internalId": {
     "type": "integer",
     "format": "int32"
    },
    "number": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "balanceType": {
     "type": "string",
     "enum": [
      "Actual",
      "Report",
      "Statistical",
      "Budget"
     ]
    },
    "currencyId": {
     "type": "string"
    },
    "consolidationSource": {
     "type": "boolean"
    },
    "consolBranch": {
     "$ref": "#/definitions/ConsolBranchDto"
    },
    "branchAccounting": {
     "type": "boolean"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "ConsolBranchDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "PackagingTypeDto": {
   "properties": {
    "boxId": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "boxWeight": {
     "type": "number",
     "format": "double"
    },
    "maxWeight": {
     "type": "number",
     "format": "double"
    },
    "weightUoM": {
     "type": "string"
    },
    "maxVolume": {
     "type": "number",
     "format": "double"
    },
    "volumeUoM": {
     "type": "string"
    },
    "length": {
     "type": "integer",
     "format": "int32"
    },
    "width": {
     "type": "integer",
     "format": "int32"
    },
    "height": {
     "type": "integer",
     "format": "int32"
    },
    "activeByDefault": {
     "type": "boolean"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a PackagingType in PackagingTypeController. Used by getting data."
  },
  "PackagingTypeQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "PaymentDto": {
   "properties": {
    "type": {
     "type": "string",
     "enum": [
      "Payment",
      "CreditNote",
      "Prepayment",
      "Refund",
      "VoidPayment",
      "SmallBalanceWo"
     ]
    },
    "refNbr": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Scheduled",
      "Open",
      "Closed",
      "PendingPrint",
      "PendingEmail",
      "CreditHold",
      "CcHold"
     ]
    },
    "hold": {
     "type": "boolean"
    },
    "applicationDate": {
     "type": "string",
     "format": "date-time"
    },
    "applicationPeriod": {
     "type": "string"
    },
    "paymentRef": {
     "type": "string"
    },
    "customer": {
     "$ref": "#/definitions/CustomerNumberDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "cashAccount": {
     "type": "string"
    },
    "currency": {
     "type": "string"
    },
    "paymentAmount": {
     "type": "number",
     "format": "double"
    },
    "invoiceText": {
     "type": "string"
    },
    "appliedToDocuments": {
     "type": "number",
     "format": "double"
    },
    "appliedToOrders": {
     "type": "number",
     "format": "double"
    },
    "availableBalance": {
     "type": "number",
     "format": "double"
    },
    "writeOffAmount": {
     "type": "number",
     "format": "double"
    },
    "financeCharges": {
     "type": "number",
     "format": "double"
    },
    "deductedCharges": {
     "type": "number",
     "format": "double"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "paymentLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/PaymentLineDto"
     }
    }
   },
   "description": "This class represents a Payment in PaymentController. Used by getting data."
  },
  "PaymentLineDto": {
   "properties": {
    "documentType": {
     "type": "string",
     "enum": [
      "Invoice",
      "DebitNote",
      "CreditNote",
      "Payment",
      "VoidPayment",
      "Prepayment",
      "Refund",
      "FinCharge",
      "SmallBalanceWo",
      "SmallCreditWo",
      "CashSale",
      "CashReturn",
      "Undefined",
      "NoUpdate"
     ]
    },
    "refNbr": {
     "type": "string"
    },
    "amountPaid": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountTaken": {
     "type": "number",
     "format": "double"
    },
    "balanceWriteOff": {
     "type": "number",
     "format": "double"
    },
    "writeOffReasonCode": {
     "$ref": "#/definitions/ReasonCodeDto"
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "dueDate": {
     "type": "string",
     "format": "date-time"
    },
    "cashDiscountDate": {
     "type": "string",
     "format": "date-time"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountBalance": {
     "type": "number",
     "format": "double"
    },
    "description": {
     "type": "string"
    },
    "currency": {
     "type": "string"
    },
    "postPeriod": {
     "type": "string"
    },
    "customerOrder": {
     "type": "string"
    },
    "crossRate": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "PaymentUpdateDto": {
   "properties": {
    "type": {
     "$ref": "#/definitions/DtoValue[Nullable[PaymentTypes]]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "applicationDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "applicationPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentRef": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customer": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "location": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentMethod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "cashAccount": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currency": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentAmount": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "invoiceText": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/PaymentLinesUpdateDto"
     }
    }
   }
  },
  "DtoValue[Nullable[PaymentTypes]]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Payment",
      "CreditNote",
      "Prepayment",
      "Refund",
      "VoidPayment",
      "SmallBalanceWo"
     ]
    }
   }
  },
  "PaymentLinesUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "documentType": {
     "$ref": "#/definitions/DtoValue[CustomerDocumentTypes]"
    },
    "refNbr": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "amountPaid": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "cashDiscountTaken": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "balanceWriteOff": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "writeOffReasonCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "crossRate": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    }
   }
  },
  "DtoValue[CustomerDocumentTypes]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Invoice",
      "DebitNote",
      "CreditNote",
      "Payment",
      "VoidPayment",
      "Prepayment",
      "Refund",
      "FinCharge",
      "SmallBalanceWo",
      "SmallCreditWo",
      "CashSale",
      "CashReturn",
      "Undefined",
      "NoUpdate"
     ]
    }
   }
  },
  "PaymentQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "ReleasePaymentActionDto": {
   "properties": {
    "type": {
     "$ref": "#/definitions/DtoValue[PaymentTypes]"
    }
   }
  },
  "DtoValue[PaymentTypes]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Payment",
      "CreditNote",
      "Prepayment",
      "Refund",
      "VoidPayment",
      "SmallBalanceWo"
     ]
    }
   }
  },
  "ReleasePaymentActionResultDto": {
   "properties": {
    "actionId": {
     "type": "string",
     "format": "uuid"
    },
    "actionResult": {
     "type": "string",
     "enum": [
      "Queued",
      "InProcess",
      "Failed",
      "Done"
     ]
    },
    "errorInfo": {
     "type": "string"
    }
   }
  },
  "PaymentMethodDto": {
   "properties": {
    "paymentMethodID": {
     "type": "string"
    },
    "active": {
     "type": "boolean"
    },
    "meansOfPayment": {
     "type": "string",
     "enum": [
      "CreditCard",
      "CashOrCheck",
      "DirectDeposit"
     ]
    },
    "description": {
     "type": "string"
    },
    "useInAP": {
     "type": "boolean"
    },
    "details": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/PaymentMethodDetailDto"
     }
    }
   },
   "description": "This class represents a Payment Method in PaymentMethodController. Used for getting data."
  },
  "PaymentMethodDetailDto": {
   "properties": {
    "detailID": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "PaymentMethodQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "PurchaseOrderBasicDto": {
   "properties": {
    "orderType": {
     "type": "string",
     "enum": [
      "RegularOrder",
      "DropShip",
      "Blanket",
      "StandardBlanket"
     ]
    },
    "orderNbr": {
     "type": "string"
    },
    "hold": {
     "type": "boolean"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Open",
      "PendingPrint",
      "PendingEmail",
      "Cancelled",
      "Closed",
      "Printed"
     ]
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "promisedOn": {
     "type": "string",
     "format": "date-time"
    },
    "description": {
     "type": "string"
    },
    "supplier": {
     "$ref": "#/definitions/SupplierDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationIdNameDto"
    },
    "owner": {
     "$ref": "#/definitions/UserDescriptionDto"
    },
    "currency": {
     "type": "string"
    },
    "supplierRef": {
     "type": "string"
    },
    "lineTotal": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "taxTotal": {
     "type": "number",
     "format": "double"
    },
    "orderTotal": {
     "type": "number",
     "format": "double"
    },
    "controlTotal": {
     "type": "number",
     "format": "double"
    },
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/PurchaseOrderLineDto"
     }
    },
    "taxDetails": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/TaxDetailDto"
     }
    }
   },
   "description": "This class represents a Purchase Order in PurchaseOrderController. Used for getting data."
  },
  "SupplierDescriptionDto": {
   "properties": {
    "internalId": {
     "type": "integer",
     "format": "int32"
    },
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "PurchaseOrderLineDto": {
   "properties": {
    "branch": {
     "$ref": "#/definitions/BranchNumberDto"
    },
    "inventory": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "lineType": {
     "type": "string",
     "enum": [
      "GoodsForInventory",
      "GoodsForSalesOrder",
      "GoodsForReplenishment",
      "GoodsForDropShip",
      "NonStockForDropShip",
      "NonStockForSalesOrder",
      "NonStock",
      "Service",
      "Freight",
      "Description"
     ]
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "lineDescription": {
     "type": "string"
    },
    "uom": {
     "type": "string"
    },
    "orderQty": {
     "type": "number",
     "format": "double"
    },
    "qtyOnReceipts": {
     "type": "number",
     "format": "double"
    },
    "unitCost": {
     "type": "number",
     "format": "double"
    },
    "extCost": {
     "type": "number",
     "format": "double"
    },
    "discountPercent": {
     "type": "number",
     "format": "double"
    },
    "discountAmount": {
     "type": "number",
     "format": "double"
    },
    "manualDiscount": {
     "type": "boolean"
    },
    "discountCode": {
     "$ref": "#/definitions/DiscountCodeNumberDescriptionDto"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "receivedAmt": {
     "type": "number",
     "format": "double"
    },
    "alternateId": {
     "type": "string"
    },
    "minReceipt": {
     "type": "number",
     "format": "double"
    },
    "maxReceipt": {
     "type": "number",
     "format": "double"
    },
    "completeOn": {
     "type": "number",
     "format": "double"
    },
    "receiptAction": {
     "type": "string",
     "enum": [
      "Reject",
      "AcceptButWarn",
      "Accept"
     ]
    },
    "taxCategory": {
     "$ref": "#/definitions/TaxCategoryNumberDescriptionDto"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberTypeDescriptionDto"
    },
    "description": {
     "type": "string"
    },
    "sub": {
     "type": "integer",
     "format": "int32"
    },
    "project": {
     "$ref": "#/definitions/ProjectDto"
    },
    "projectTask": {
     "$ref": "#/definitions/ProjectTaskDto"
    },
    "requested": {
     "type": "string",
     "format": "date-time"
    },
    "promised": {
     "type": "string",
     "format": "date-time"
    },
    "completed": {
     "type": "boolean"
    },
    "canceled": {
     "type": "boolean"
    },
    "orderType": {
     "type": "string",
     "enum": [
      "RegularOrder",
      "DropShip",
      "Blanket",
      "StandardBlanket"
     ]
    },
    "orderNumber": {
     "type": "string"
    }
   },
   "description": "This class represents a Purchase Order Line in PurchaseOrderController. Used for getting data."
  },
  "TaxDetailDto": {
   "properties": {
    "recordId": {
     "type": "integer",
     "format": "int32"
    },
    "vatId": {
     "$ref": "#/definitions/TaxNumberDescriptionDto"
    },
    "vatRate": {
     "type": "number",
     "format": "double"
    },
    "taxableAmount": {
     "type": "number",
     "format": "double"
    },
    "vatAmount": {
     "type": "number",
     "format": "double"
    }
   },
   "description": "This class represents a Tax Detail Line for Purchase Order in PurchaseOrderController. Used for getting data."
  },
  "DiscountCodeNumberDescriptionDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "TaxCategoryNumberDescriptionDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "AccountNumberTypeDescriptionDto": {
   "properties": {
    "type": {
     "type": "string"
    },
    "number": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ProjectDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ProjectTaskDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "TaxNumberDescriptionDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "PurchaseOrderQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "PurchaseReceiptDto": {
   "properties": {
    "receiptType": {
     "type": "string",
     "enum": [
      "PoReceipt",
      "PoReturn",
      "TransferReceipt"
     ]
    },
    "receiptNbr": {
     "type": "string"
    },
    "hold": {
     "type": "boolean"
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Released"
     ]
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "postPeriod": {
     "type": "string"
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "supplier": {
     "$ref": "#/definitions/SupplierDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "currency": {
     "type": "string"
    },
    "createBill": {
     "type": "boolean"
    },
    "supplierRef": {
     "type": "string"
    },
    "totalQty": {
     "type": "number",
     "format": "double"
    },
    "controlQty": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotal": {
     "type": "number",
     "format": "double"
    },
    "totalAmt": {
     "type": "number",
     "format": "double"
    },
    "controlTotal": {
     "type": "number",
     "format": "double"
    },
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/PurchaseReceiptLineDto"
     }
    },
    "landedCost": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/LandedCostDto"
     }
    }
   },
   "description": "This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data."
  },
  "PurchaseReceiptLineDto": {
   "properties": {
    "branch": {
     "$ref": "#/definitions/BranchNumberDto"
    },
    "inventory": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "lineType": {
     "type": "string",
     "enum": [
      "GoodsForInventory",
      "GoodsForSalesOrder",
      "GoodsForReplenishment",
      "GoodsForDropShip",
      "NonStockForDropShip",
      "NonStockForSalesOrder",
      "NonStock",
      "Service",
      "Freight",
      "Description"
     ]
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationIdNameDto"
    },
    "lineDescription": {
     "type": "string"
    },
    "uom": {
     "type": "string"
    },
    "orderQty": {
     "type": "number",
     "format": "double"
    },
    "openQty": {
     "type": "number",
     "format": "double"
    },
    "receiptQty": {
     "type": "number",
     "format": "double"
    },
    "unitCost": {
     "type": "number",
     "format": "double"
    },
    "extCost": {
     "type": "number",
     "format": "double"
    },
    "discountPercent": {
     "type": "number",
     "format": "double"
    },
    "discountAmount": {
     "type": "number",
     "format": "double"
    },
    "manualDiscount": {
     "type": "boolean"
    },
    "discountCode": {
     "$ref": "#/definitions/DiscountCodeNumberDescriptionDto"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "taxCategory": {
     "$ref": "#/definitions/TaxCategoryNumberDescriptionDto"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberTypeDescriptionDto"
    },
    "description": {
     "type": "string"
    },
    "sub": {
     "$ref": "#/definitions/SubAccountDescriptionDto"
    },
    "actualAccount": {
     "$ref": "#/definitions/AccountNumberTypeDescriptionDto"
    },
    "actualSub": {
     "$ref": "#/definitions/SubAccountDescriptionDto"
    },
    "project": {
     "$ref": "#/definitions/ProjectDto"
    },
    "projectTask": {
     "$ref": "#/definitions/ProjectTaskDto"
    },
    "lotSerialNumber": {
     "type": "string"
    },
    "poOrderType": {
     "type": "string",
     "enum": [
      "RegularOrder",
      "DropShip",
      "Blanket",
      "StandardBlanket"
     ]
    },
    "poOrderNbr": {
     "type": "string"
    },
    "poOrderLineNbr": {
     "type": "integer",
     "format": "int32"
    },
    "transferOrderType": {
     "type": "string",
     "enum": [
      "CreditNote",
      "DebitNote",
      "Invoice",
      "QuoteOrder",
      "RMAOrder",
      "SalesOrder",
      "StandardOrder",
      "TransferOrder"
     ]
    },
    "transferOrderNbr": {
     "type": "string"
    },
    "transferOrderLineNbr": {
     "type": "integer",
     "format": "int32"
    },
    "completePoLine": {
     "type": "boolean"
    }
   },
   "description": "This class represents a Purchase Order Line in PurchaseReceiptContraoller. Used for getting data."
  },
  "LandedCostDto": {
   "properties": {
    "landedCostCode": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "purchaseInvoiceNbr": {
     "type": "string"
    },
    "supplier": {
     "$ref": "#/definitions/SupplierDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "apBillDate": {
     "type": "string",
     "format": "date-time"
    },
    "currency": {
     "type": "string"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "taxCategory": {
     "$ref": "#/definitions/TaxCategoryNumberDescriptionDto"
    },
    "terms": {
     "$ref": "#/definitions/CreditTermsDto"
    },
    "inventory": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "apDocType": {
     "type": "string",
     "enum": [
      "Check",
      "CreditAdj",
      "DebitAdj",
      "Invoice",
      "Prepayment",
      "QuickCheck",
      "Refund",
      "VoidCheck",
      "VoidQuickCheck"
     ]
    },
    "apRefNbr": {
     "type": "string"
    },
    "inDocType": {
     "type": "string",
     "enum": [
      "Invoice",
      "DebitNote",
      "CreditNote",
      "Payment",
      "VoidPayment",
      "Prepayment",
      "Refund",
      "FinCharge",
      "SmallBalanceWo",
      "SmallCreditWo",
      "CashSale",
      "CashReturn",
      "Undefined",
      "NoUpdate"
     ]
    },
    "inRefNbr": {
     "type": "string"
    },
    "postponePurchaseInvoiceCreation": {
     "type": "boolean"
    }
   },
   "description": "This class represents a Landed Cost Line for Purchase Receipt in PurchaseReceiptController. Used for getting data."
  },
  "SubAccountDescriptionDto": {
   "properties": {
    "id": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "PurchaseReceiptQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "SalesOrderUpdateDto": {
   "properties": {
    "project": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "printDescriptionOnInvoice": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "printNoteOnExternalDocuments": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "printNoteOnInternalDocuments": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "soBillingContact": {
     "$ref": "#/definitions/DtoValue[SalesOrderContactUpdateDto]"
    },
    "soBillingAddress": {
     "$ref": "#/definitions/DtoValue[SalesOrderAddressUpdateDto]"
    },
    "branch": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "customerVATZone": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "invoiceSeparately": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "terms": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "salesPerson": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "owner": {
     "$ref": "#/definitions/DtoValue[Nullable[Guid]]"
    },
    "origOrderType": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "origOrderNbr": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "soShippingContact": {
     "$ref": "#/definitions/DtoValue[SalesOrderContactUpdateDto]"
    },
    "soShippingAddress": {
     "$ref": "#/definitions/DtoValue[SalesOrderAddressUpdateDto]"
    },
    "schedShipment": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "shipSeparately": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "shipComplete": {
     "$ref": "#/definitions/DtoValue[Nullable[SalesOrderShipCompleteStatuses]]"
    },
    "cancelBy": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "canceled": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "preferredWarehouse": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "shipVia": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "fobPoint": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "priority": {
     "$ref": "#/definitions/DtoValue[Nullable[Int16]]"
    },
    "shippingTerms": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "shippingZone": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "residentialDelivery": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "saturdayDelivery": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "insurance": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "transactionType": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SalesOrderLineUpdateDto"
     }
    },
    "orderType": {
     "$ref": "#/definitions/DtoValue[Nullable[SalesOrderTypes]]"
    },
    "orderNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "date": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "requestOn": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "customerOrder": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customerRefNo": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customer": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "location": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currency": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "recalculateShipment": {
     "type": "boolean"
    }
   },
   "description": "This class represent a Sales Order in Sales Order Controller. Used to pass data to server for creating or updating an order"
  },
  "DtoValue[SalesOrderContactUpdateDto]": {
   "properties": {
    "value": {
     "$ref": "#/definitions/SalesOrderContactUpdateDto"
    }
   }
  },
  "DtoValue[SalesOrderAddressUpdateDto]": {
   "properties": {
    "value": {
     "$ref": "#/definitions/SalesOrderAddressUpdateDto"
    }
   }
  },
  "DtoValue[Nullable[SalesOrderShipCompleteStatuses]]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "BackOrderAllowed",
      "CancelRemainder",
      "ShipComplete"
     ]
    }
   }
  },
  "SalesOrderLineUpdateDto": {
   "properties": {
    "branch": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "invoiceNbr": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "salesOrderOperation": {
     "$ref": "#/definitions/DtoValue[Nullable[SalesOrderOperations]]"
    },
    "freeItem": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "requestedOn": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "shipOn": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "shipComplete": {
     "$ref": "#/definitions/DtoValue[Nullable[SalesOrderShipCompleteStatuses]]"
    },
    "undershipThreshold": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "overshipThreshold": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "completed": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "markForPO": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "poSource": {
     "$ref": "#/definitions/DtoValue[Nullable[InventoryReplenishmentSources]]"
    },
    "lotSerialNbr": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "expirationDate": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "reasonCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "salesPerson": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "taxCategory": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "commissionable": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "alternateID": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "projectTask": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNbr": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "inventoryId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "warehouse": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "unitPrice": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "discountCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "manualDiscount": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "discUnitPrice": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "lineDescription": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   },
   "description": "This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line"
  },
  "DtoValue[Nullable[SalesOrderTypes]]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "CreditNote",
      "DebitNote",
      "Invoice",
      "QuoteOrder",
      "RMAOrder",
      "SalesOrder",
      "StandardOrder",
      "TransferOrder"
     ]
    }
   }
  },
  "SalesOrderContactUpdateDto": {
   "properties": {
    "overrideContact": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "name": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "attention": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "email": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "web": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone2": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "fax": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "SalesOrderAddressUpdateDto": {
   "properties": {
    "overrideAddress": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "addressLine1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "addressLine2": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "addressLine3": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "postalCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "city": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "countryId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "county": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "DtoValue[Nullable[SalesOrderOperations]]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Issue",
      "Receipt"
     ]
    }
   }
  },
  "DtoValue[Nullable[InventoryReplenishmentSources]]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "DropShipToOrder",
      "Manufactured",
      "None",
      "Purchased",
      "PurchaseToOrder",
      "Transfer"
     ]
    }
   }
  },
  "CreateShipmentActionDto": {
   "properties": {
    "returnShipmentDto": {
     "type": "boolean"
    },
    "shipmentDate": {
     "type": "string",
     "format": "date-time"
    },
    "shipmentWarehouse": {
     "type": "string"
    }
   }
  },
  "CreateShipmentActionResultDto": {
   "properties": {
    "referenceNumber": {
     "type": "string"
    },
    "shipmentDto": {
     "$ref": "#/definitions/ShipmentDto"
    },
    "actionId": {
     "type": "string",
     "format": "uuid"
    },
    "actionResult": {
     "type": "string",
     "enum": [
      "Queued",
      "InProcess",
      "Failed",
      "Done"
     ]
    },
    "errorInfo": {
     "type": "string"
    }
   }
  },
  "ShipmentDto": {
   "properties": {
    "shipmentNumber": {
     "type": "string"
    },
    "shipmentType": {
     "type": "string",
     "enum": [
      "Issue",
      "DropShip",
      "Transfer"
     ]
    },
    "status": {
     "type": "string",
     "enum": [
      "Open",
      "Hold",
      "Completed",
      "Cancelled",
      "Confirmed",
      "Invoiced",
      "Receipted",
      "AutoGenerated",
      "PartiallyInvoiced"
     ]
    },
    "hold": {
     "type": "boolean"
    },
    "operation": {
     "type": "string",
     "enum": [
      "Issue",
      "Receipt"
     ]
    },
    "shipmentDate": {
     "type": "string",
     "format": "date-time"
    },
    "customer": {
     "$ref": "#/definitions/CustomerDescriptionDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "fromWarehouse": {
     "$ref": "#/definitions/WarehouseDto"
    },
    "toWarehouse": {
     "$ref": "#/definitions/WarehouseDto"
    },
    "currencyId": {
     "type": "string"
    },
    "owner": {
     "$ref": "#/definitions/UserDescriptionDto"
    },
    "shippedQuantity": {
     "type": "number",
     "format": "double"
    },
    "shippedWeight": {
     "type": "number",
     "format": "double"
    },
    "shippedVolume": {
     "type": "number",
     "format": "double"
    },
    "packages": {
     "type": "number",
     "format": "double"
    },
    "packagesWeight": {
     "type": "number",
     "format": "double"
    },
    "controlQuantity": {
     "type": "number",
     "format": "double"
    },
    "deliveryAddress": {
     "$ref": "#/definitions/ShipmentAddressDto"
    },
    "deliveryContact": {
     "$ref": "#/definitions/ShipmentContactDto"
    },
    "shipVia": {
     "$ref": "#/definitions/CarrierDescriptionDto"
    },
    "fobPoint": {
     "$ref": "#/definitions/FOBPointDescriptionDto"
    },
    "shippingTerms": {
     "$ref": "#/definitions/ShippingTermsDescriptionDto"
    },
    "shippingZone": {
     "$ref": "#/definitions/ShippingZoneDescriptionDto"
    },
    "residentialDelivery": {
     "type": "boolean"
    },
    "saturdayDelivery": {
     "type": "boolean"
    },
    "useCustomerAccount": {
     "type": "boolean"
    },
    "insurance": {
     "type": "boolean"
    },
    "freightCost": {
     "type": "number",
     "format": "double"
    },
    "freightAmt": {
     "type": "number",
     "format": "double"
    },
    "transactionType": {
     "$ref": "#/definitions/SigmaIntrastatTransactionDescriptionDto"
    },
    "modeOfTrasport": {
     "$ref": "#/definitions/ModeOfTransportDto"
    },
    "container": {
     "type": "boolean"
    },
    "shipmentDetailLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/ShipmentDetailLineDto"
     }
    },
    "shipmentOrderLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/ShipmentOrderLineDto"
     }
    },
    "shipmentPackageLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/PackageDetailLineDto"
     }
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a Shipment in ShipmentController. Used by getting data."
  },
  "ShipmentAddressDto": {
   "properties": {
    "overrideAddress": {
     "type": "boolean"
    },
    "addressId": {
     "type": "integer",
     "format": "int32"
    },
    "addressLine1": {
     "type": "string"
    },
    "addressLine2": {
     "type": "string"
    },
    "addressLine3": {
     "type": "string"
    },
    "postalCode": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "country": {
     "$ref": "#/definitions/CountryDto"
    },
    "county": {
     "$ref": "#/definitions/CountyDto"
    }
   }
  },
  "ShipmentContactDto": {
   "properties": {
    "overrideContact": {
     "type": "boolean"
    },
    "contactId": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    },
    "attention": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "web": {
     "type": "string"
    },
    "phone1": {
     "type": "string"
    },
    "phone2": {
     "type": "string"
    },
    "fax": {
     "type": "string"
    }
   }
  },
  "ModeOfTransportDto": {
   "properties": {
    "id": {
     "type": "integer",
     "format": "int32"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ShipmentDetailLineDto": {
   "properties": {
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "orderType": {
     "type": "string"
    },
    "orderNbr": {
     "type": "string"
    },
    "inventoryNumber": {
     "type": "string"
    },
    "freeItem": {
     "type": "boolean"
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "uom": {
     "type": "string"
    },
    "shippedQty": {
     "type": "number",
     "format": "double"
    },
    "orderedQty": {
     "type": "number",
     "format": "double"
    },
    "openQty": {
     "type": "number",
     "format": "double"
    },
    "lotSerialNbr": {
     "type": "string"
    },
    "expirationDate": {
     "type": "string",
     "format": "date-time"
    },
    "reasonCode": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ShipmentOrderLineDto": {
   "properties": {
    "orderType": {
     "type": "string"
    },
    "orderNbr": {
     "type": "string"
    },
    "shippedQty": {
     "type": "number",
     "format": "double"
    },
    "shippedWeight": {
     "type": "number",
     "format": "double"
    },
    "shippedVolume": {
     "type": "number",
     "format": "double"
    },
    "invoiceType": {
     "type": "string"
    },
    "invoiceNbr": {
     "type": "string"
    },
    "inventoryDocType": {
     "type": "string"
    },
    "inventoryRefNbr": {
     "type": "string"
    }
   }
  },
  "PackageDetailLineDto": {
   "properties": {
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "confirmed": {
     "type": "boolean"
    },
    "boxId": {
     "type": "string"
    },
    "type": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "weight": {
     "type": "number",
     "format": "double"
    },
    "uom": {
     "type": "string"
    },
    "declaredValue": {
     "type": "number",
     "format": "double"
    },
    "codAmount": {
     "type": "number",
     "format": "double"
    },
    "trackingNumber": {
     "type": "string"
    },
    "customRefNbr1": {
     "type": "string"
    },
    "customRefNbr2": {
     "type": "string"
    }
   }
  },
  "SalesOrderBasicUpdateDto": {
   "properties": {
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SalesOrderBasicLineUpdateDto"
     }
    },
    "orderType": {
     "$ref": "#/definitions/DtoValue[Nullable[SalesOrderTypes]]"
    },
    "orderNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "date": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "requestOn": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "customerOrder": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customerRefNo": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customer": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "location": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currency": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "recalculateShipment": {
     "type": "boolean"
    }
   },
   "description": "This class represent a Sales Order in Sales Order Controller. Used to pass data to server for creating or updating an order"
  },
  "SalesOrderBasicLineUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNbr": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "inventoryId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "warehouse": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "unitPrice": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "discountCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "manualDiscount": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "discUnitPrice": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "lineDescription": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   },
   "description": "This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line"
  },
  "SalesOrderTypeDto": {
   "properties": {
    "orderType": {
     "type": "string"
    },
    "active": {
     "type": "boolean"
    },
    "description": {
     "type": "string"
    }
   },
   "description": "This class represents a SOOrderType in SalesOrderTypeController. Used to get data."
  },
  "SalesOrderTypeQueryParameters": {
   "properties": {
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "ShipmentsQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "ShipmentUpdateDto": {
   "properties": {
    "hold": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "fromWarehouse": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "toWarehouse": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "controlQuantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "overrideContact": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "businessName": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "attention": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "phone1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "email": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "overrideAddress": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "addressLine1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "addressLine2": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "city": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "country": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "county": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "postalCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "shipVia": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "fobPoint": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "shippingTerms": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "shippingZone": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "residentialDelivery": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "saturdayDelivery": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "useCustomerAccount": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "insurance": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "freightAmt": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "transactionType": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "modeOfTrasport": {
     "$ref": "#/definitions/DtoValue[Nullable[TransportationModes]]"
    },
    "container": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "shipmentDetailLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/ShipmentDetailLineUpdateDto"
     }
    },
    "shipmentPackageLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/ShipmentPackageLineUpdateDto"
     }
    }
   }
  },
  "DtoValue[Nullable[TransportationModes]]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Unknown",
      "BySea",
      "ByRail",
      "ByRoad",
      "ByAeroPlane",
      "ConsignmentsByPosts",
      "FixedInstallations",
      "InlandWaterway"
     ]
    }
   }
  },
  "ShipmentDetailLineUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "warehouse": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "location": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "shippedQty": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "lotSerialNbr": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "expirationDate": {
     "$ref": "#/definitions/DtoValue[Nullable[DateTime]]"
    },
    "reasonCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "ShipmentPackageLineUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "confirmed": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "boxId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "weight": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "declaredValue": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "codAmount": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "trackingNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customRefNbr1": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "customRefNbr2": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "StocktakeDto": {
   "properties": {
    "referenceNbr": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "summaryStatus": {
     "type": "string",
     "enum": [
      "Cancelled",
      "Completed",
      "Counting",
      "Entering"
     ]
    },
    "freezeDate": {
     "type": "string",
     "format": "date-time"
    },
    "numberOfLines": {
     "type": "integer",
     "format": "int32"
    },
    "physicalQty": {
     "type": "number",
     "format": "double"
    },
    "varianceQty": {
     "type": "number",
     "format": "double"
    },
    "varianceCost": {
     "type": "number",
     "format": "double"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/StocktakeLineDto"
     }
    }
   }
  },
  "StocktakeLineDto": {
   "properties": {
    "status": {
     "type": "string",
     "enum": [
      "NotEntered",
      "Entered",
      "Skipped"
     ]
    },
    "lineNbr": {
     "type": "integer",
     "format": "int32"
    },
    "tagNbr": {
     "type": "integer",
     "format": "int32"
    },
    "inventory": {
     "$ref": "#/definitions/InventoryIdNameDto"
    },
    "location": {
     "$ref": "#/definitions/LocationIdNameDto"
    },
    "warehouse": {
     "$ref": "#/definitions/WarehouseIdDescriptionDto"
    },
    "lotSerialNbr": {
     "type": "string"
    },
    "expirationDate": {
     "type": "string",
     "format": "date-time"
    },
    "bookQuantity": {
     "type": "number",
     "format": "double"
    },
    "physicalQuantity": {
     "type": "number",
     "format": "double"
    },
    "varianceQuantity": {
     "type": "number",
     "format": "double"
    },
    "unitCost": {
     "type": "number",
     "format": "double"
    },
    "extVarianceCost": {
     "type": "number",
     "format": "double"
    },
    "reasonCode": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "InventoryIdNameDto": {
   "properties": {
    "id": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "StocktakeUpdateDto": {
   "properties": {
    "lines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/StocktakeLineUpdateDto"
     }
    }
   },
   "description": "This class represents a Stocktake in StocktakeController. Used to update Stocktake."
  },
  "StocktakeLineUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNbr": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "physicalQuantity": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    }
   },
   "description": "This class represent a Stocktake line in StocktakeContoller. Used to update a Stocktake line"
  },
  "StocktakeQueryParameters": {
   "properties": {
    "warehouse": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "inventory": {
     "type": "string"
    },
    "lotSerialNumber": {
     "type": "string"
    },
    "summaryStatus": {
     "type": "string",
     "enum": [
      "Cancelled",
      "Completed",
      "Counting",
      "Entering"
     ]
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "startWithLine": {
     "type": "integer",
     "format": "int32"
    },
    "endWithLine": {
     "type": "integer",
     "format": "int32"
    },
    "freezeDateTime": {
     "type": "string"
    },
    "freezeDateTimeCondition": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    },
    "expirationDateTime": {
     "type": "string"
    },
    "expirationDateTimeCondition": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "NotEntered",
      "Entered",
      "Skipped"
     ]
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "SupplierBalanceQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "SupplierBalanceDto": {
   "properties": {
    "supplier": {
     "$ref": "#/definitions/SupplierDescriptionDto"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "unreleasedPurchasesNotInApproval": {
     "$ref": "#/definitions/WithoutWithVatDto"
    },
    "totalSentForApproval": {
     "$ref": "#/definitions/WithoutWithVatDto"
    },
    "totalPurchaseInvoicePeriod": {
     "$ref": "#/definitions/WithoutWithVatDto"
    },
    "totalPurchaseInvoiceYear": {
     "$ref": "#/definitions/WithoutWithVatDto"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "WithoutWithVatDto": {
   "properties": {
    "withoutVat": {
     "type": "number",
     "format": "double"
    },
    "withVat": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "SupplierPOBalanceDto": {
   "properties": {
    "supplier": {
     "$ref": "#/definitions/SupplierDescriptionDto"
    },
    "totalPOOnHoldOrderTotal": {
     "type": "number",
     "format": "double"
    },
    "totalPOOnHoldLineTotal": {
     "type": "number",
     "format": "double"
    },
    "totalOpenPOOrderTotal": {
     "type": "number",
     "format": "double"
    },
    "totalOpenPOLineTotal": {
     "type": "number",
     "format": "double"
    },
    "totalClosedPOOrderTotal": {
     "type": "number",
     "format": "double"
    },
    "totalClosedPOLineTotal": {
     "type": "number",
     "format": "double"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "SupplierDto": {
   "properties": {
    "internalId": {
     "type": "integer",
     "format": "int32"
    },
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "Active",
      "OnHold",
      "HoldPayments",
      "Inactive",
      "OneTime"
     ]
    },
    "mainAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "mainContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "accountReference": {
     "type": "string"
    },
    "parentRecord": {
     "$ref": "#/definitions/ParentRecordDto"
    },
    "supplierClass": {
     "$ref": "#/definitions/ClassDescriptionDto"
    },
    "creditTerms": {
     "$ref": "#/definitions/CreditTermsDto"
    },
    "documentLanguage": {
     "type": "string"
    },
    "currencyId": {
     "type": "string"
    },
    "remitAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "remitContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "cashAccount": {
     "type": "string"
    },
    "chargeBearer": {
     "type": "string",
     "enum": [
      "Payer",
      "Beneficiary",
      "Shared",
      "ServiceLevel"
     ]
    },
    "accountUsedForPayment": {
     "type": "string",
     "enum": [
      "IBAN",
      "BBAN",
      "BANKGIRO",
      "PLUSGIRO"
     ]
    },
    "paymentBy": {
     "type": "string",
     "enum": [
      "DueDate",
      "DiscountDate"
     ]
    },
    "paymentLeadTime": {
     "type": "integer",
     "format": "int32"
    },
    "paymentRefDisplayMask": {
     "type": "string"
    },
    "paySeparately": {
     "type": "boolean"
    },
    "supplierAddress": {
     "$ref": "#/definitions/AddressDto"
    },
    "supplierContact": {
     "$ref": "#/definitions/ContactInfoDto"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "vatRegistrationId": {
     "type": "string"
    },
    "corporateId": {
     "type": "string"
    },
    "vatZone": {
     "$ref": "#/definitions/VatZoneDto"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    }
   },
   "description": "This class represents a supplier in SupplierController. Used by getting data."
  },
  "SupplierUpdateDto": {
   "properties": {
    "number": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "name": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "status": {
     "$ref": "#/definitions/DtoValue[SupplierStatus]"
    },
    "accountReference": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "parentRecordNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "supplierClassId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "overrideWithClassValues": {
     "type": "boolean"
    },
    "creditTermsId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "documentLanguage": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currencyId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentMethodId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "cashAccount": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentLeadTime": {
     "$ref": "#/definitions/DtoValue[Nullable[Int16]]"
    },
    "paymentRefDisplayMask": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paySeparately": {
     "$ref": "#/definitions/DtoValue[Nullable[Boolean]]"
    },
    "vatRegistrationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "corporateId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatZoneId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "chargeBearer": {
     "$ref": "#/definitions/DtoValue[SupplierChargeBearer]"
    },
    "accountUsedForPayment": {
     "$ref": "#/definitions/DtoValue[AccountUsedForPayment]"
    },
    "paymentBy": {
     "$ref": "#/definitions/DtoValue[PaymentBy]"
    },
    "mainAddress": {
     "$ref": "#/definitions/DtoValue[AddressUpdateDto]"
    },
    "mainContact": {
     "$ref": "#/definitions/DtoValue[ContactInfoUpdateDto]"
    },
    "remitAddress": {
     "$ref": "#/definitions/DtoValue[AddressUpdateDto]"
    },
    "remitContact": {
     "$ref": "#/definitions/DtoValue[ContactInfoUpdateDto]"
    },
    "supplierAddress": {
     "$ref": "#/definitions/DtoValue[AddressUpdateDto]"
    },
    "supplierContact": {
     "$ref": "#/definitions/DtoValue[ContactInfoUpdateDto]"
    },
    "supplierPaymentMethodDetails": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SupplierPaymentMethodDetailUpdateDto"
     }
    }
   },
   "description": "This class represents a supplier in SupplierController. Used to create and update supplier."
  },
  "DtoValue[SupplierStatus]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Active",
      "OnHold",
      "HoldPayments",
      "Inactive",
      "OneTime"
     ]
    }
   }
  },
  "DtoValue[SupplierChargeBearer]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "Payer",
      "Beneficiary",
      "Shared",
      "ServiceLevel"
     ]
    }
   }
  },
  "DtoValue[AccountUsedForPayment]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "IBAN",
      "BBAN",
      "BANKGIRO",
      "PLUSGIRO"
     ]
    }
   }
  },
  "DtoValue[PaymentBy]": {
   "properties": {
    "value": {
     "type": "string",
     "enum": [
      "DueDate",
      "DiscountDate"
     ]
    }
   }
  },
  "SupplierPaymentMethodDetailUpdateDto": {
   "properties": {
    "paymentMethodDetailDescription": {
     "type": "string"
    },
    "paymentMethodDetailValue": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   },
   "description": "This class represents a Payment Method Detail in SupplierController. Used to update SupplierPaymentMethodDetails when creating or updating a Supplier."
  },
  "SupplierQueryParameters": {
   "properties": {
    "greaterThanValue": {
     "type": "string"
    },
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "orderBy": {
     "type": "string"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "SupplierInvoiceDto": {
   "properties": {
    "invoiceLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SupplierInvoiceLineDto"
     }
    },
    "hold": {
     "type": "boolean"
    },
    "paymentRefNo": {
     "type": "string"
    },
    "creditTerms": {
     "$ref": "#/definitions/CreditTermsDto"
    },
    "cashDiscountDate": {
     "type": "string",
     "format": "date-time"
    },
    "detailTotal": {
     "type": "number",
     "format": "double"
    },
    "detailTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTaxableTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotal": {
     "type": "number",
     "format": "double"
    },
    "vatExemptTotalInCurrency": {
     "type": "number",
     "format": "double"
    },
    "withholdingTax": {
     "type": "number",
     "format": "double"
    },
    "withholdingTaxInCurrency": {
     "type": "number",
     "format": "double"
    },
    "supplier": {
     "$ref": "#/definitions/SupplierNumberDto"
    },
    "documentType": {
     "type": "string",
     "enum": [
      "Check",
      "CreditAdj",
      "DebitAdj",
      "Invoice",
      "Prepayment",
      "QuickCheck",
      "Refund",
      "VoidCheck",
      "VoidQuickCheck"
     ]
    },
    "referenceNumber": {
     "type": "string"
    },
    "postPeriod": {
     "type": "string"
    },
    "financialPeriod": {
     "type": "string"
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "dueDate": {
     "type": "string",
     "format": "date-time"
    },
    "approvalStatus": {
     "type": "string",
     "enum": [
      "New",
      "Canceled",
      "SentToApproval",
      "ReceivedByApproval",
      "InProgressApproval",
      "RejectedInApproval",
      "ApprovedInApproval",
      "ActiveWorkflowApproval"
     ]
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Scheduled",
      "Open",
      "Closed",
      "Printed",
      "Prebooked"
     ]
    },
    "currencyId": {
     "type": "string"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "balanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "cashDiscount": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "supplierReference": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "createdDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "note": {
     "type": "string"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "vatTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTotalInCurrency": {
     "type": "number",
     "format": "double"
    }
   },
   "description": "This class represents a ApInvoice in SupplierInvoiceController. Used by getting data."
  },
  "SupplierInvoiceLineDto": {
   "properties": {
    "lineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "inventoryNumber": {
     "type": "string"
    },
    "transactionDescription": {
     "type": "string"
    },
    "quantity": {
     "type": "number",
     "format": "double"
    },
    "uom": {
     "type": "string"
    },
    "unitCost": {
     "type": "number",
     "format": "double"
    },
    "unitCostInCurrency": {
     "type": "number",
     "format": "double"
    },
    "cost": {
     "type": "number",
     "format": "double"
    },
    "costInCurrency": {
     "type": "number",
     "format": "double"
    },
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "subaccount": {
     "$ref": "#/definitions/SubAccountDto"
    },
    "deferralSchedule": {
     "type": "integer",
     "format": "int32"
    },
    "deferralCode": {
     "type": "string"
    },
    "vatCode": {
     "$ref": "#/definitions/VatCodeDto"
    },
    "poNumber": {
     "type": "string"
    },
    "poLineNr": {
     "type": "integer",
     "format": "int32"
    },
    "poReceiptNbr": {
     "type": "string"
    },
    "poReceiptLineNbr": {
     "type": "integer",
     "format": "int32"
    },
    "branchNumber": {
     "type": "string"
    },
    "note": {
     "type": "string"
    }
   }
  },
  "SupplierNumberDto": {
   "properties": {
    "number": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "SupplierDocumentDto": {
   "properties": {
    "account": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "subaccount": {
     "$ref": "#/definitions/SubAccountDto"
    },
    "branch": {
     "$ref": "#/definitions/BranchNumberDto"
    },
    "amount": {
     "type": "number",
     "format": "double"
    },
    "amountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "supplier": {
     "$ref": "#/definitions/SupplierNumberDto"
    },
    "documentType": {
     "type": "string",
     "enum": [
      "Check",
      "CreditAdj",
      "DebitAdj",
      "Invoice",
      "Prepayment",
      "QuickCheck",
      "Refund",
      "VoidCheck",
      "VoidQuickCheck"
     ]
    },
    "referenceNumber": {
     "type": "string"
    },
    "postPeriod": {
     "type": "string"
    },
    "financialPeriod": {
     "type": "string"
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "dueDate": {
     "type": "string",
     "format": "date-time"
    },
    "approvalStatus": {
     "type": "string",
     "enum": [
      "New",
      "Canceled",
      "SentToApproval",
      "ReceivedByApproval",
      "InProgressApproval",
      "RejectedInApproval",
      "ApprovedInApproval",
      "ActiveWorkflowApproval"
     ]
    },
    "status": {
     "type": "string",
     "enum": [
      "Hold",
      "Balanced",
      "Voided",
      "Scheduled",
      "Open",
      "Closed",
      "Printed",
      "Prebooked"
     ]
    },
    "currencyId": {
     "type": "string"
    },
    "balance": {
     "type": "number",
     "format": "double"
    },
    "balanceInCurrency": {
     "type": "number",
     "format": "double"
    },
    "cashDiscount": {
     "type": "number",
     "format": "double"
    },
    "cashDiscountInCurrency": {
     "type": "number",
     "format": "double"
    },
    "paymentMethod": {
     "$ref": "#/definitions/PaymentMethodIdDescriptionDto"
    },
    "supplierReference": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "createdDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "note": {
     "type": "string"
    },
    "location": {
     "$ref": "#/definitions/LocationDto"
    },
    "vatTotal": {
     "type": "number",
     "format": "double"
    },
    "vatTotalInCurrency": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "SupplierInvoiceUpdateDto": {
   "properties": {
    "referenceNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "hold": {
     "$ref": "#/definitions/DtoValue[Boolean]"
    },
    "date": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "postPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "financialPeriod": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "supplierReference": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "description": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "supplierNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "locationId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "currencyId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "paymentRefNo": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "creditTermsId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "dueDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "cashDiscountDate": {
     "$ref": "#/definitions/DtoValue[DateTime]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "exchangeRate": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "invoiceLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SupplierInvoiceLineUpdateDto"
     }
    }
   }
  },
  "SupplierInvoiceLineUpdateDto": {
   "properties": {
    "operation": {
     "type": "string",
     "enum": [
      "Insert",
      "Update",
      "Delete"
     ]
    },
    "lineNumber": {
     "$ref": "#/definitions/DtoValue[Int32]"
    },
    "inventoryNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "transactionDescription": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "quantity": {
     "$ref": "#/definitions/DtoValue[Decimal]"
    },
    "uom": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "unitCostInCurrency": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "costInCurrency": {
     "$ref": "#/definitions/DtoValue[Nullable[Decimal]]"
    },
    "accountNumber": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "subaccount": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/SegmentUpdateDto"
     }
    },
    "deferralSchedule": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "deferralCode": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "vatCodeId": {
     "$ref": "#/definitions/DtoValue[String]"
    },
    "branchNumber": {
     "$ref": "#/definitions/DtoValue[Nullable[Int32]]"
    },
    "note": {
     "$ref": "#/definitions/DtoValue[String]"
    }
   }
  },
  "ReleaseSupplierInvoiceActionResultDto": {
   "properties": {
    "actionId": {
     "type": "string",
     "format": "uuid"
    },
    "actionResult": {
     "type": "string",
     "enum": [
      "Queued",
      "InProcess",
      "Failed",
      "Done"
     ]
    },
    "errorInfo": {
     "type": "string"
    }
   }
  },
  "VatInformationDto": {
   "properties": {
    "vatCategoryId": {
     "type": "string"
    },
    "vatId": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "Sales",
      "Use",
      "Vat",
      "Withholding",
      "ExemptVat",
      "StatisticalVat",
      "DirectVat",
      "PendingVat",
      "ReverseVat"
     ]
    },
    "deductibleVat": {
     "type": "boolean"
    },
    "reverseVat": {
     "type": "boolean"
    },
    "statisticalVat": {
     "type": "boolean"
    },
    "pendingVat": {
     "type": "boolean"
    },
    "includeinVatExemptTotal": {
     "type": "boolean"
    },
    "includeinVatTotal": {
     "type": "boolean"
    },
    "enterFromVatInvoice": {
     "type": "boolean"
    },
    "calculateOn": {
     "type": "string",
     "enum": [
      "ExtractFromItemAmount",
      "ItemAmount",
      "ItemTaxAmount",
      "DocumentAmount",
      "DocumenTaxAmount"
     ]
    },
    "cashDiscount": {
     "type": "string",
     "enum": [
      "ToTaxableAmount",
      "ToPromtPayment",
      "ToTaxAmount",
      "AdjustTax",
      "NoAdjust"
     ]
    },
    "vatAgencyId": {
     "$ref": "#/definitions/SupplierNumberDto"
    },
    "notValidAfter": {
     "type": "string",
     "format": "date-time"
    },
    "euReportCode": {
     "type": "string",
     "enum": [
      "SalesOfGoods",
      "Triangulation",
      "SalesOfService"
     ]
    },
    "documentText": {
     "type": "string",
     "enum": [
      "Construction",
      "SupplyVat0",
      "DenoteExportSales",
      "EUSaleExemptFromTax",
      "Triangulation",
      "TransportOutsideEU",
      "SpecialTaxFreeTransfer",
      "MedicalServiceSales",
      "BuyerHasVATLiability",
      "SalesOfGold",
      "GoodsServicesWithPartialDeduction",
      "MargineScheme",
      "TravelAgentsMargineScheme",
      "PartiallyNonDeductibleInUse",
      "Vat0SalesOutsideCommunity",
      "SelfBilling",
      "MargineSchemeUsedItems",
      "MargineSchemeWorksOfArt",
      "MargineSchemeCollectorsItems"
     ]
    },
    "defaultNonStockItem": {
     "$ref": "#/definitions/InventoryNumberDescriptionDto"
    },
    "vismaXmlVatType": {
     "type": "string",
     "enum": [
      "VatTypeHigh",
      "VatTypeMedium",
      "VatTypeLow",
      "VatTypeZero"
     ]
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "glAccounts": {
     "$ref": "#/definitions/VatGlAccountsDto"
    },
    "schedules": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/VatInformationScheduleDto"
     }
    },
    "categories": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/VatCategoryDto"
     }
    },
    "zones": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/VatZoneDto"
     }
    }
   }
  },
  "VatGlAccountsDto": {
   "properties": {
    "vatPayableAccount": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "vatPayableSubaccount": {
     "$ref": "#/definitions/SubAccountDescriptionDto"
    },
    "vatClaimableAccount": {
     "$ref": "#/definitions/AccountNumberDto"
    },
    "vatClaimableSubccount": {
     "$ref": "#/definitions/SubAccountDescriptionDto"
    }
   }
  },
  "VatInformationScheduleDto": {
   "properties": {
    "startDate": {
     "type": "string",
     "format": "date-time"
    },
    "vatRate": {
     "type": "number",
     "format": "double"
    },
    "minTaxableAmt": {
     "type": "number",
     "format": "double"
    },
    "maxTaxableAmt": {
     "type": "number",
     "format": "double"
    },
    "reportingGroup": {
     "type": "string"
    }
   }
  },
  "VatCategoryDto": {
   "properties": {
    "vatCategoryId": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "active": {
     "type": "boolean"
    },
    "excludeListedTaxes": {
     "type": "boolean"
    },
    "lastModifiedDateTime": {
     "type": "string",
     "format": "date-time"
    },
    "vatCategoryLines": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/VatCategoryLineDto"
     }
    }
   }
  },
  "VatCategoryLineDto": {
   "properties": {
    "vatId": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "Sales",
      "Use",
      "Vat",
      "Withholding",
      "ExemptVat",
      "StatisticalVat",
      "DirectVat",
      "PendingVat",
      "ReverseVat"
     ]
    },
    "calculateOn": {
     "type": "string",
     "enum": [
      "ExtractFromItemAmount",
      "ItemAmount",
      "ItemTaxAmount",
      "DocumentAmount",
      "DocumenTaxAmount"
     ]
    },
    "cashDiscount": {
     "type": "string",
     "enum": [
      "ToTaxableAmount",
      "ToPromtPayment",
      "ToTaxAmount",
      "AdjustTax",
      "NoAdjust"
     ]
    }
   }
  },
  "VatQueryParameters": {
   "properties": {
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "VatCategoryQueryParameters": {
   "properties": {
    "numberToRead": {
     "type": "integer",
     "format": "int32"
    },
    "skipRecords": {
     "type": "integer",
     "format": "int32"
    },
    "lastModifiedDateTime": {
     "type": "string"
    },
    "lastModifiedDateTimeCondition": {
     "type": "string"
    }
   }
  },
  "Object": {
   "type": "object"
  },
  "ReleaseInvoiceActionDto": {},
  "ReleaseSupplierInvoiceActionDto": {}
 }
}